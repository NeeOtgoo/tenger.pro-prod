{"version":3,"file":"static/js/5695.2f43c2df.chunk.js","mappings":"6OAmDA,GAAeA,EAAAA,EAAAA,KALS,SAAH,GAEnB,MAAO,CAAEC,QAFqB,EAALC,MACjBD,QAEV,GAEwC,CAAC,EAAzC,EA9C6B,SAAH,GAA6D,IAAxDE,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASL,EAAO,EAAPA,QACxE,GAAsCM,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAC5BC,GAAMC,EAAAA,EAAAA,QAAO,OAElBC,EAAAA,EAAAA,YAAU,WACV,GAAIX,IAAYY,EAAAA,GAAc,CAC7B,IAAMC,EAAaC,OAAOC,WACpBC,EAAiBP,EAAIQ,QAAQC,YACnCV,GAAiBK,EAAaG,GAAkB,EACjD,CACD,GAAG,CAAChB,IAaJ,OACC,gBACCS,IAAKA,EACLL,UAAS,0BAAqBA,GAAwB,GAAE,YAAIC,GAAW,WACvEc,MAfe,WAChB,IAAIA,EAAQ,CAAEC,gBAAiBjB,EAAU,cAAUA,EAAU,KAAM,QAOnE,OANIH,IAAYY,EAAAA,KACfO,EAAME,aAAed,EACrBY,EAAMG,YAAcf,EACpBY,EAAMI,YAAc,EACpBJ,EAAMK,aAAe,GAEfL,CACR,CAMSM,GAAW,SAEjBzB,IAAYY,EAAAA,IAAe,gBAAKR,UAAU,YAAW,SAAEF,KAAkB,8BAAGA,KAGhF,I,WChCQwB,EAAUC,EAAAA,EAAAA,MAuBlB,EArBkB,SAACC,GAAW,IAAD,EAEzB,OACI,SAAC,EAAa,CAACxB,UAAU,aAAaC,SAAO,YAClD,gBAAKD,UAAU,wBAAuB,UACrC,iBAAKA,UAAU,UAAS,WACvB,eAAIA,UAAU,uBAAsB,UAAC,SAACyB,EAAA,EAAW,CAACC,GAAG,wBACrD,SAAC,IAAG,CAACC,KAAK,OAAOC,QAAQ,SAAQ,UAChC,SAAC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UAC3B,SAACT,EAAK,CAACtB,UAAU,gDAA+C,SACvB,QADuB,EAC9DwB,EAAMQ,SAASC,MAAMC,QAAQC,kBAAU,aAAvC,EAAyCC,kBASlD,C","sources":["components/layout-components/PageHeaderAlt.js","views/app-views/take-test/show-score.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React from 'react';\r\nimport { Row, Col, Typography  } from 'antd';\r\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst ShowScore = (props) => {\r\n\r\n    return (\r\n        <PageHeaderAlt className=\"bg-primary\" overlap>\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<div className=\"py-lg-4\">\r\n\t\t\t\t\t<h1 className=\"text-white display-4\"><IntlMessage id=\"total-exam-score\" /></h1>\r\n\t\t\t\t\t<Row type=\"flex\" justify=\"center\">\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\t\t\t\t\t\t\t<Title className=\"text-white w-75 text-center mt-2 mb-4 mx-auto\">\r\n\t\t\t\t\t\t\t\t{props.location.state.message.finishTest?.score}\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</PageHeaderAlt>\r\n    )\r\n\r\n}\r\n\r\nexport default ShowScore"],"names":["connect","navType","theme","children","background","className","overlap","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","Title","Typography","props","IntlMessage","id","type","justify","xs","sm","md","location","state","message","finishTest","score"],"sourceRoot":""}