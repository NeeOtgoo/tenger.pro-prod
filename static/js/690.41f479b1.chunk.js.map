{"version":3,"file":"static/js/690.41f479b1.chunk.js","mappings":"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","sources":["components/shared-components/StatisticWidget/index.js","constants/ChartConstant.js","components/shared-components/ChartWidget/index.js","views/app-views/home/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatisticWidget = ({ title, value, Svg }) => {\r\n\treturn (\r\n\t\t<div className='flex justify-between items-center bg-gradient-to-br from-emind to-emind-300  rounded-2 p-4'>\r\n            <div>\r\n                <h1 className=\"mb-0 font-bold text-white\">{value}</h1>\r\n                <h4 className=\"mb-0 text-white\">{title}</h4>\r\n            </div>\r\n            <div>\r\n                <Svg className=\"h-16 w-16 fill-white\"/>\r\n            </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nStatisticWidget.propTypes = {\r\n  \ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tsubtitle: PropTypes.string,\r\n\tstatus: PropTypes.number,\r\n\tprefix: PropTypes.element\r\n};\r\n\r\nexport default StatisticWidget","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = () => (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Skeleton } from 'antd';\r\nimport StatisticWidget from 'components/shared-components/StatisticWidget';\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { \r\n    ParentSVG, \r\n    StudentSVG, \r\n    SubjectSVG,  \r\n    TeacherSVG, \r\n} from 'assets/svg/menu-icon';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { UserContext } from \"hooks/UserContextProvider\";\r\n\r\nconst DASHBOARD = gql `\r\n    query dashboard {\r\n        dashboard {\r\n            studentCount\r\n            teacherCount\r\n            parentCount\r\n            subjectCount\r\n            logins {\r\n                loginDate\r\n                loginCount\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DefaultDashboard = () => {\r\n\r\n    const [countData, setCountData] = useState([])\r\n    const [series, setSeries] = useState([])\r\n    const [xAxis, setXAxis] = useState([])\r\n        \r\n    const contextData = useContext(UserContext)\r\n    const [user] = useState(contextData.user);\r\n    \r\n    const { loading } = useQuery(DASHBOARD, {\r\n        onCompleted: data => {\r\n            setCountData([\r\n                {\r\n                    title: <IntlMessage id=\"student-registration\" />,\r\n                    value: data.dashboard.studentCount,\r\n                    svg: StudentSVG,\r\n                    color: '#ff8a65'\r\n                },\r\n                {\r\n                    title: <IntlMessage id=\"teacher-registration\" />,\r\n                    value: data.dashboard.teacherCount,\r\n                    svg: TeacherSVG,\r\n                    color: '#f06292'\r\n                },\r\n                {\r\n                    title: <IntlMessage id=\"parent-registration\" />,\r\n                    value: data.dashboard.parentCount,\r\n                    svg: ParentSVG,\r\n                    color: '#4db6ac'\r\n                },\r\n                {\r\n                    title: <IntlMessage id=\"subject-registration\" />,\r\n                    value: data.dashboard.subjectCount,\r\n                    svg: SubjectSVG,\r\n                    color: '#9575cd'\r\n                }\r\n            ])\r\n            const ser = data.dashboard.logins.map(item => {\r\n                setXAxis(prevData => [...prevData, item.loginDate])\r\n                return item.loginCount\r\n            })\r\n            setSeries([\r\n                {\r\n                    name: 'Нэвтэрсэн тоо',\r\n                    data: ser\r\n                }\r\n            ])\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>  \r\n            <Skeleton loading={loading} active rows={6}>\r\n                <div className=\"grid gap-4 md:grid-cols-4 mb-4\">\r\n                    { countData?.map((elm, i) => (\r\n                        <StatisticWidget\r\n                            key={i} \r\n                            color={elm.color}\r\n                            title={elm.title} \r\n                            value={elm.value}\r\n                            Svg={elm.svg}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <ChartWidget \r\n                    title={<IntlMessage id=\"main.site_status\" />}\r\n                    series={series} \r\n                    xAxis={xAxis} \r\n                    className=\"h-2/3\"\r\n                />\r\n            </Skeleton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(DefaultDashboard);\r\n"],"names":["title","value","Svg","className","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","titleStyle","zIndex","extraStyle","right","top","ChartWidget","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","ref","defaultProps","DASHBOARD","gql","DefaultDashboard","useState","countData","setCountData","setSeries","setXAxis","contextData","useContext","UserContext","user","loading","useQuery","onCompleted","data","IntlMessage","id","dashboard","studentCount","svg","StudentSVG","color","teacherCount","TeacherSVG","parentCount","ParentSVG","subjectCount","SubjectSVG","ser","logins","map","item","prevData","loginDate","loginCount","name","active","rows","elm","i","withRouter"],"sourceRoot":""}