{"version":3,"file":"static/js/406.0a512c56.chunk.js","mappings":"wQA0GA,UAhGc,WAEV,OAAgCA,EAAAA,EAAAA,YAAU,eAAnCC,EAAQ,KAAEC,EAAW,KAC5B,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAAsCJ,EAAAA,EAAAA,UAAS,IAAG,eAA3CK,EAAW,KAAEC,EAAc,KAElC,GAAmCC,EAAAA,EAAAA,GAASC,EAAAA,GAAS,CACjDC,UAAW,CAAEN,OAAQA,KADjBO,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAIvB,GAA6BC,EAAAA,EAAAA,GAAYC,EAAAA,GAAqB,CAC1DC,YAAa,SAAAL,GACTE,IACAN,GAAe,SAAAU,GAAQ,OAAIA,EAASb,QAAO,SAACc,GAAI,OAAKA,IAASP,EAAKQ,mBAAmBC,aAAaC,EAAE,GAAC,GAC1G,IAJGF,GAKL,YALuB,GA0BzB,OACI,+BACI,gBAAKG,UAAU,gEAA+D,SACxEpB,GAEM,SAAC,IAAgB,CAACA,SAAUA,EAAUC,YAAaA,KAInD,iCACI,iBAAKmB,UAAU,2CAA0C,WACrD,kBACIC,SAzBhC,SAAyBC,GACjBA,EAAEC,OAAOC,QACTnB,EAAeI,EAAKgB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGR,EAAE,KAE1Cd,EAAe,GAEvB,EAoBgCuB,KAAK,WACLR,UAAU,sEAEZhB,EAAYyB,OAAS,GACnB,SAAC,IAAU,CACPC,MAAM,qDACNC,OAAO,uCACPC,WAAW,iCACXC,UAxCpC,WACI7B,EAAYsB,KAAI,SAACV,GACbC,EAAmB,CAAET,UAAW,CAAEW,GAAIH,EAAMkB,WAAY,WAC5D,GACJ,EAoCwD,UAEpB,SAAC,IAAS,CACNd,UAAU,iDAId,iBAAKA,UAAU,2CAA0C,WACrD,SAAC,IAAK,CAACC,SAAU,SAAAC,GAAC,OAlC1D,SAAkBA,GACpB,IAAMa,EAAQb,EAAEc,cAAcD,MACxBhC,EAAUgC,EACjB,CA+BiEE,CAASf,EAAE,EAAEF,UAAU,sBAAsBkB,YAAa,2BAAQC,QAAQ,SAAC,IAAc,OAC/G,SAAC,IAAW,CACRnB,UAAU,0CACVoB,QAAS,kBAAM7B,GAAS,WAK5C,gBAAKS,UAAU,MAAK,SACdV,GAAU,SAAC,IAAO,CAAC+B,MAAM,YACvBhC,EAAKgB,OAAOC,KAAI,SAACV,EAAM0B,GAAK,OACxB,SAAC,IAAgB,CACb1C,SAAUA,EACV2C,UAAWvC,EAAYwC,SAAS5B,EAAKG,IACrCV,KAAMO,EAEN6B,IAAI,EACJ5C,YAAaA,EACbI,eAAgBA,GAHXqC,EAIP,YAU1C,C","sources":["views/app-views/conversation/sent/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Input, Popconfirm } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport ConversationCard from 'components/shared-components/ConversationCard';\r\nimport ConversationBody from 'components/shared-components/ConversationBody';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { DELETE_CONVERSATION, MY_SENT } from 'graphql/conversation';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { CheckIcon, RefreshIcon, TrashIcon } from '@heroicons/react/outline';\r\n\r\nconst Index = () => {\r\n\r\n    const [selected, setSelected] = useState()\r\n    const [filter, setFilter] = useState(\"\")\r\n    const [checkedList, setCheckedList] = useState([])\r\n\r\n    const { data, loading, refetch } = useQuery(MY_SENT, {\r\n        variables: { filter: filter }\r\n    }) \r\n\r\n    const [deleteConversation] = useMutation(DELETE_CONVERSATION, {\r\n        onCompleted: data => {\r\n            refetch()\r\n            setCheckedList(prevList => prevList.filter((item) => item !== data.deleteConversation.conversation.id))\r\n        }\r\n    })\r\n\r\n    function onDelete() {\r\n        checkedList.map((item) => {\r\n            deleteConversation({ variables: { id: item, deleteType: 'sender' } })\r\n        })\r\n    }\r\n\r\n    function handleSelectAll(e) {\r\n        if (e.target.checked) {\r\n            setCheckedList(data.mySent.map(li => li.id));\r\n        } else {\r\n            setCheckedList([]);\r\n        }\r\n    }\r\n\r\n    function onSearch(e) {\r\n\t\tconst value = e.currentTarget.value\r\n        setFilter(value)\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col w-full m-2 h-full bg-white rounded-4 md:w-10/12\">\r\n                { selected ?\r\n                    (\r\n                        <ConversationBody selected={selected} setSelected={setSelected} />\r\n                    )\r\n                    :\r\n                    (\r\n                        <>\r\n                            <div className='flex flex-row items-center space-x-2 m-4'>\r\n                                <input\r\n                                    onChange={handleSelectAll}\r\n                                    type=\"checkbox\"\r\n                                    className=\"focus:ring-emind-500 h-5 w-5 accent-emind border-gray-300 rounded\"\r\n                                />\r\n                                { checkedList.length > 0 ?\r\n                                    <Popconfirm\r\n                                        title=\"Устгах уу?\"\r\n                                        okText=\"Устгах\"\r\n                                        cancelText=\"Болих\"\r\n                                        onConfirm={onDelete}\r\n                                    >\r\n                                        <TrashIcon \r\n                                            className='h-5 w-5 text-red-500 hover:cursor-pointer'\r\n                                        />\r\n                                    </Popconfirm>\r\n                                    :\r\n                                        <div className='flex justify-between w-full items-center'>\r\n                                            <Input onChange={e => onSearch(e)} className='ml-4 w-2/3 md:w-1/3' placeholder={'Хайх'} prefix={<SearchOutlined />} />\r\n                                            <RefreshIcon \r\n                                                className='h-5 w-5 text-emind hover:cursor-pointer'  \r\n                                                onClick={() => refetch()}\r\n                                            />\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            <div className='m-2'>\r\n                                { loading ? <Loading cover='content' /> :\r\n                                    data.mySent.map((item, index) => (\r\n                                        <ConversationCard \r\n                                            selected={selected}\r\n                                            isChecked={checkedList.includes(item.id)}\r\n                                            data={item}\r\n                                            key={index} \r\n                                            to={true}\r\n                                            setSelected={setSelected} \r\n                                            setCheckedList={setCheckedList}\r\n                                        />\r\n                                ))}\r\n                            </div>\r\n                    </>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["useState","selected","setSelected","filter","setFilter","checkedList","setCheckedList","useQuery","MY_SENT","variables","data","loading","refetch","useMutation","DELETE_CONVERSATION","onCompleted","prevList","item","deleteConversation","conversation","id","className","onChange","e","target","checked","mySent","map","li","type","length","title","okText","cancelText","onConfirm","deleteType","value","currentTarget","onSearch","placeholder","prefix","onClick","cover","index","isChecked","includes","to"],"sourceRoot":""}