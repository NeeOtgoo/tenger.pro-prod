"use strict";(self.webpackChunkemind=self.webpackChunkemind||[]).push([[1479],{68470:function(e,n,t){t(72791);var i=t(80184),s=function(e){var n=e.children,t=e.className,s=e.alignItems,r=e.justifyContent,a=e.mobileFlex,o=e.flexDirection;return(0,i.jsx)("div",{className:"".concat(a?"d-flex":"d-md-flex"," ").concat(t," ").concat(o?"flex-"+o:""," ").concat(s?"align-items-"+s:""," ").concat(r?"justify-content-"+r:""),children:n})};s.defaultProps={mobileFlex:!0,flexDirection:"row",className:""},n.Z=s},93721:function(e,n,t){t.d(n,{Eo:function(){return Y},Gu:function(){return U},Ik:function(){return re},Iy:function(){return ne},LL:function(){return de},NP:function(){return O},O2:function(){return W},OY:function(){return X},Qg:function(){return A},TR:function(){return se},Ve:function(){return H},Wp:function(){return J},_2:function(){return oe},cL:function(){return E},fW:function(){return K},gT:function(){return te},jk:function(){return z},kQ:function(){return ie},nR:function(){return B},nx:function(){return M},qC:function(){return R},qQ:function(){return F},qz:function(){return ae},rb:function(){return N},vA:function(){return ue},vQ:function(){return G},wT:function(){return V},xs:function(){return _},zd:function(){return ee}});var i,s,r,a,o,d,u,l,c,m,$,T,Z,x,f,p,v,j,k,h,q,g,y,w,I,P,b,S,C,L,Q=t(30168),D=t(27570),A=(0,D.Ps)(i||(i=(0,Q.Z)(["\n    query allOnlineTests {\n        allOnlineTests {\n            id\n            title\n            description\n            subject {\n                id\n                subject\n            }\n        }\n    }\n"]))),O=(0,D.Ps)(s||(s=(0,Q.Z)(["\n    mutation createOnlineTest ($description: String, $subject: Int, $title: String) {\n        createOnlineTest (description: $description, subject: $subject, title: $title) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),_=(0,D.Ps)(r||(r=(0,Q.Z)(["\n    mutation updateOnlineTest ($description: String, $id: ID, $subject: Int, $title: String) {\n        updateOnlineTest (description: $description, id: $id, subject: $subject, title: $title) {\n            OnlineTest {\n                id\n            }\n        }\n    }\n"]))),N=(0,D.Ps)(a||(a=(0,Q.Z)(["\n    mutation deleteOnlineTest ($id: ID) {\n        deleteOnlineTest (id: $id) {\n            onlineTest {\n                id\n            }\n        }\n    }\n"]))),F=(0,D.Ps)(o||(o=(0,Q.Z)(["\n    query allQuestionLevels {\n        allQuestionLevels {\n            level\n            id\n        }\n    }\n"]))),Y=(0,D.Ps)(d||(d=(0,Q.Z)(["\n    mutation createQuestionLevel ($level: String) {\n        createQuestionLevel (level: $level) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),E=(0,D.Ps)(u||(u=(0,Q.Z)(["\n    mutation updateQuestionLevel ($level: String, $id: ID) {\n        updateQuestionLevel (level: $level, id: $id) {\n            questionLevel {\n                id\n            }\n        }\n    }\n"]))),z=(0,D.Ps)(l||(l=(0,Q.Z)(["\n    mutation deleteQuestionLevel ($id: ID) {\n        deleteQuestionLevel (id: $id) {\n            questionLevel {\n                level\n            }\n        }\n    }\n"]))),B=(0,D.Ps)(c||(c=(0,Q.Z)(["\n    query allQuestionsByTest ($id: Int!) {\n        allQuestionsByTest (id: $id) {\n            id\n            question\n            hint\n            image\n            answerType\n            questionLevel {\n                id\n                level\n            }\n            questionChoiceSet {\n                id\n                answer\n                score\n            }\n        }\n    }\n"]))),H=(0,D.Ps)(m||(m=(0,Q.Z)(['\n    mutation createQuestion ($answerType: String, $image: Upload, $onlineTest: Int, $questionLevel: Int) {\n        createQuestion (answerType: $answerType, hint: "", image: $image, onlineTest: $onlineTest, questionL: "\u0410\u0441\u0443\u0443\u043b\u0442", questionLevel: $questionLevel) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n']))),M=(0,D.Ps)($||($=(0,Q.Z)(["\n    mutation updateQuestion ($answerType: String, $hint: String, $image: Upload, $onlineTest: Int, $questionL: String, $questionLevel: Int, $id: ID) {\n        updateQuestion (answerType: $answerType, hint: $hint, image: $image, onlineTest: $onlineTest, questionL: $questionL, questionLevel: $questionLevel, id: $id) {\n            question {\n                id\n                answerType\n            }\n        }\n    }\n"]))),R=(0,D.Ps)(T||(T=(0,Q.Z)(["\n    mutation deleteQuestion ($id: ID) {\n        deleteQuestion (id: $id) {\n            question {\n                question\n            }\n        }\n    }\n"]))),V=(0,D.Ps)(Z||(Z=(0,Q.Z)(["\n    mutation createQuestionChoice ($answer: String, $question: Int, $score: Decimal) {\n        createQuestionChoice (answer: $answer, question: $question, score: $score) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),W=(0,D.Ps)(x||(x=(0,Q.Z)(["\n    mutation updateQuestionChoice ($answer: String, $question: Int, $score: Decimal, $id: ID) {\n        updateQuestionChoice (answer: $answer, question: $question, score: $score, id: $id) {\n            questionChoice {\n                id\n            }\n        }\n    }\n"]))),U=(0,D.Ps)(f||(f=(0,Q.Z)(["\n    mutation deleteQuestionChoice ($id: ID) {\n        deleteQuestionChoice (id: $id) {\n            questionChoice {\n                score\n            }\n        }\n    }\n"]))),G=(0,D.Ps)(p||(p=(0,Q.Z)(["\n    query allTakeTests {\n        allTakeTests {\n            id\n            title\n            description\n            startAt\n            endAt\n            duration\n            status\n        }\n    }\n"]))),K=(0,D.Ps)(v||(v=(0,Q.Z)(["\n    mutation createTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $description: String, $title: String) {\n        createTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),J=(0,D.Ps)(j||(j=(0,Q.Z)(["\n    mutation updateTakeTest ($duration: Int, $endAt: String, $startAt: String, $status: String, $id: ID, $description: String, $title: String) {\n        updateTakeTest (duration: $duration, endAt: $endAt, startAt: $startAt, status: $status, id: $id, description: $description, title: $title) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),X=(0,D.Ps)(k||(k=(0,Q.Z)(["\n    mutation deleteTakeTest ($id: ID) {\n        deleteTakeTest (id: $id) {\n            takeTest {\n                status\n            }\n        }\n    }\n"]))),ee=(0,D.Ps)(h||(h=(0,Q.Z)(["\n    query allParticipantByTest ($takeTest: Int!) {\n        allParticipantByTest (takeTest: $takeTest) {\n            id\n            student {\n                studentCode\n                familyName\n                name\n            }\n            started\n            completed\n            answerSet {\n                answerType\n                questionText\n                choices\n                score\n                givenAnswer\n            }\n        }\n    }\n"]))),ne=(0,D.Ps)(q||(q=(0,Q.Z)(['\n    mutation createParticipant ($section: Int = 0, $studentCode: String = "", $takeTest: Int) {\n        createParticipant (section: $section, studentCode: $studentCode, takeTest: $takeTest) {\n            participant {\n                id\n            }\n        }\n    }\n']))),te=(0,D.Ps)(g||(g=(0,Q.Z)(["\n    mutation deleteParticipant ($id: ID, $takeTest: Int) {\n        deleteParticipant (id: $id, takeTest: $takeTest) {\n            participant {\n                started\n            }\n        }\n    }\n"]))),ie=(0,D.Ps)(y||(y=(0,Q.Z)(["\n    query allTakeLevelByTest ($takeTest: Int!) {\n        allTakeLevelByTest (takeTest: $takeTest) {\n            id\n            onlineTest {\n                id\n                title\n            }\n            questionLevel {\n                id\n                level\n            }\n            takeNumber\n        }\n    }\n"]))),se=(0,D.Ps)(w||(w=(0,Q.Z)(["\n    mutation createTakeLevel ($onlineTest: Int, $questionLevel: Int, $takeNumber: Int, $takeTest: Int) {\n        createTakeLevel (onlineTest: $onlineTest, questionLevel: $questionLevel, takeNumber: $takeNumber, takeTest: $takeTest) {\n            takeLevel {\n                id\n            }\n        }\n    }\n"]))),re=(0,D.Ps)(I||(I=(0,Q.Z)(["\n    mutation deleteTakeLevel ($id: ID) {\n        deleteTakeLevel (id: $id) {\n            takeLevel {\n                takeNumber\n            }\n        }\n    }\n"]))),ae=((0,D.Ps)(P||(P=(0,Q.Z)(["\n    query allSections {\n        allSections {\n            id\n            section\n            studentSet {\n                id\n                studentCode\n            }\n        }\n    }\n"]))),(0,D.Ps)(b||(b=(0,Q.Z)(["\n    query startTest ($takeTest: Int!) {\n        startTest (takeTest: $takeTest) {\n            id\n            questionText\n            choices\n            answerType\n            givenAnswer\n            question {\n                hint\n                image\n            }\n        }\n    }\n"])))),oe=(0,D.Ps)(S||(S=(0,Q.Z)(["\n    mutation updateAnswer ($givenAnswer: String, $id: ID) {\n        updateAnswer (givenAnswer: $givenAnswer, id: $id) {\n            answer {\n                id\n            }\n        }\n    }\n"]))),de=(0,D.Ps)(C||(C=(0,Q.Z)(["\n    query testTime ($takeTest: Int!) {\n        testTime (takeTest: $takeTest) {\n            duration\n            started\n            endAt\n        }\n    }\n"]))),ue=(0,D.Ps)(L||(L=(0,Q.Z)(["\n    query finishTest ($takeTest: Int!) {\n        finishTest (takeTest: $takeTest) {\n            score\n        }\n    }\n"])))},21479:function(e,n,t){t.r(n),t.d(n,{default:function(){return H}});var i=t(72791),s=t(29439),r=t(20003),a=t(50419),o=t(87309),d=t(66871),u=t(49389),l=t(59432),c=t(37083),m=t(69421),$=t(76849),T=t(77154),Z=t(36795),x=t(82464),f=t(89516),p=t(11730),v=t(31549),j=t(96578),k=t(84376),h=t(64880),q=t(91523),g=t(68470),y=t(2703),w=t(11561),I=t(22949),P=t(73332),b=t(76835),S=t(93721),C=t(72426),L=t.n(C),Q=t(82630),D=t(80184),A=u.Z.TextArea,O=w.Z.RangePicker,_=I.Z.Option;var N=function(e){var n=e.editData,t=e.formType,r=e.setIsModalVisible,o=P.Z.useForm(),d=(0,s.Z)(o,1)[0],l=(0,k.D)(S.fW,{refetchQueries:[S.vQ],onCompleted:function(e){a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0445\u0430\u0434\u0433\u0430\u043b\u043b\u0430\u0430"),r(!1)}}),m=(0,s.Z)(l,2),$=m[0],T=m[1].loading,Z=(0,k.D)(S.Wp,{refetchQueries:[S.vQ],onCompleted:function(e){a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0445\u0430\u0434\u0433\u0430\u043b\u043b\u0430\u0430"),r(!1)}}),x=(0,s.Z)(Z,2),f=x[0],p=x[1].loading;return(0,i.useEffect)((function(){if("edit"===t){var e=n.startAt.split("T");e=(e=(e=e[0]+" "+e[1]).split("+"))[0];var i=n.endAt.split("T");i=(i=(i=i[0]+" "+i[1]).split("+"))[0];var s={title:n.title,description:n.description,duration:n.duration,status:n.status,date:[L()(e),L()(i)]};d.setFieldsValue(s)}else"create"===t&&d.resetFields()}),[n,d,t]),(0,D.jsx)(c.Z,{spinning:T||p,tip:"\u0410\u0447\u0430\u0430\u043b\u043b\u0430\u0436 \u0431\u0430\u0439\u043d\u0430...",children:(0,D.jsxs)(P.Z,{id:"TestForm",layout:"vertical",form:d,name:"school",onFinish:function(e){e.date.map((function(n,t){return 0===t?e.startAt=L()(n).format("YYYY-MM-DDTHH:mm:ss+00:00"):e.endAt=L()(n).format("YYYY-MM-DDTHH:mm:ss+00:00"),null})),"edit"===t?(e.id=n.id,f({variables:e})):(e.status="CLOSED",$({variables:e}))},children:[(0,D.jsx)(P.Z.Item,{name:"title",label:(0,D.jsx)(Q.Z,{id:"title"}),rules:[{required:!0,message:(0,D.jsx)(Q.Z,{id:"form.required"})}],children:(0,D.jsx)(u.Z,{})}),(0,D.jsx)(P.Z.Item,{name:"description",label:(0,D.jsx)(Q.Z,{id:"description"}),rules:[{required:!0,message:(0,D.jsx)(Q.Z,{id:"form.required"})}],children:(0,D.jsx)(A,{rows:4})}),(0,D.jsx)(P.Z.Item,{name:"date",label:(0,D.jsx)(Q.Z,{id:"start_end_date"}),rules:[{required:!0,message:(0,D.jsx)(Q.Z,{id:"form.required"})}],children:(0,D.jsx)(O,{showTime:!0})}),(0,D.jsx)(P.Z.Item,{name:"duration",label:(0,D.jsx)(Q.Z,{id:"duration"}),rules:[{required:!0,message:(0,D.jsx)(Q.Z,{id:"form.required"})}],children:(0,D.jsx)(b.Z,{min:1,style:{width:"100%"}})}),"edit"===t&&(0,D.jsx)(P.Z.Item,{name:"status",label:(0,D.jsx)(Q.Z,{id:"status"}),rules:[{required:!0,message:(0,D.jsx)(Q.Z,{id:"form.required"})}],children:(0,D.jsxs)(I.Z,{children:[(0,D.jsx)(_,{value:"OPEN",children:(0,D.jsx)(Q.Z,{id:"status.open"})}),(0,D.jsx)(_,{value:"CLOSED",children:(0,D.jsx)(Q.Z,{id:"status.closed"})})]})})]})})},F=t(59305),Y=t(53719);var E=function(e){var n=e.permissions,t=(0,i.useContext)(Y.S),w=(0,i.useState)(t.user),I=(0,s.Z)(w,1)[0],P=(0,i.useState)(!1),b=(0,s.Z)(P,2),C=b[0],L=b[1],A=(0,i.useState)([]),O=(0,s.Z)(A,2),_=O[0],E=O[1],z=(0,i.useState)(""),B=(0,s.Z)(z,2),H=B[0],M=B[1],R=(0,i.useState)([]),V=(0,s.Z)(R,2),W=V[0],U=V[1],G=(0,h.k6)(),K=(0,j.a)(S.vQ,{pollInterval:5e3}),J=K.loading,X=K.data,ee=K.refetch;(0,i.useEffect)((function(){!1===J&&X&&U(X.allTakeTests)}),[J,X]);var ne=r.Z.confirm,te=(0,k.D)(S.OY,{onCompleted:function(e){ee(),a.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0443\u0441\u0442\u043b\u0430\u0430")}}),ie=(0,s.Z)(te,2),se=ie[0],re=ie[1].loading,ae=[{key:"title",title:(0,D.jsx)(Q.Z,{id:"name"}),dataIndex:"title",width:"20vw",sorter:function(e,n){return y.ZP.antdTableSorter(e,n,"title")}},{key:"description",title:(0,D.jsx)(Q.Z,{id:"description"}),dataIndex:"description",width:"35vw",sorter:function(e,n){return y.ZP.antdTableSorter(e,n,"description")}},{key:"status",title:(0,D.jsx)(Q.Z,{id:"status"}),dataIndex:"status",width:"10vw",render:function(e){return"CLOSED"===e?(0,D.jsx)(Q.Z,{id:"status.closed"}):(0,D.jsx)(Q.Z,{id:"status.open"})},sorter:function(e,n){return y.ZP.antdTableSorter(e,n,"status")}},{key:"actions",title:(0,D.jsx)(Q.Z,{id:"main.action"}),width:"20vw",dataIndex:"actions",render:function(e,t){return(0,D.jsxs)("div",{className:"text-center",children:["OPEN"===t.status&&I.isStudent&&(0,D.jsxs)(o.Z,{size:"small",onClick:function(){return e=t.id,void G.push("".concat(F.sH,"/exam/").concat(e));var e},type:"text",icon:(0,D.jsx)($.Z,{}),children:[" ",(0,D.jsx)(Q.Z,{id:"take-exam"})]}),!0===n.add_question&&(0,D.jsxs)(o.Z,{size:"small",onClick:function(){return e=t.id,void G.push("".concat(F.sH,"/take-test/").concat(e));var e},type:"text",icon:(0,D.jsx)(T.Z,{}),children:[" ",(0,D.jsx)(Q.Z,{id:"main.read-more"})]}),!0===n.edit&&(0,D.jsxs)(o.Z,{size:"small",onClick:function(){return E(t),M("edit"),void L(!0)},type:"text",icon:(0,D.jsx)(Z.Z,{twoToneColor:"#ffdb00"}),children:[" ",(0,D.jsx)(Q.Z,{id:"edit"})]}),!0===n.destroy&&(0,D.jsxs)(o.Z,{size:"small",onClick:function(){return e=t,void ne({title:"\u0423\u0441\u0442\u0433\u0430\u0445 \u0443\u0443?",okText:"\u0423\u0441\u0442\u0433\u0430\u0445",okType:"danger",cancelText:"\u0411\u043e\u043b\u0438\u0445",onOk:function(){se({variables:{id:e.id}})}});var e},type:"text",icon:(0,D.jsx)(x.Z,{twoToneColor:"#f42f2f"}),children:[" ",(0,D.jsx)(Q.Z,{id:"delete"})]})]})}}];return(0,D.jsxs)(D.Fragment,{children:[(0,D.jsx)(r.Z,{forceRender:!0,title:"edit"===H?(0,D.jsx)(Q.Z,{id:"edit"}):(0,D.jsx)(Q.Z,{id:"add_new"}),visible:C,okText:(0,D.jsx)(Q.Z,{id:"main.okText"}),cancelText:(0,D.jsx)(Q.Z,{id:"main.cancelText"}),onCancel:function(){L(!1)},okButtonProps:{form:"TestForm",key:"submit",htmlType:"submit"},children:(0,D.jsx)(N,{formType:H,setIsModalVisible:L,editData:_})}),n.view_online_test&&(0,D.jsx)(q.rU,{to:"online-test-library",children:(0,D.jsxs)(o.Z,{icon:(0,D.jsx)(f.Z,{}),children:[" ",(0,D.jsx)(Q.Z,{id:"online-test-library"})]})}),(0,D.jsxs)(d.Z,{className:"mt-4",children:[(0,D.jsxs)(g.Z,{alignItems:"center",justifyContent:"between",mobileFlex:!1,children:[(0,D.jsx)(g.Z,{className:"mb-1",mobileFlex:!1,children:(0,D.jsx)("div",{className:"mr-md-3 mb-3",children:(0,D.jsx)(u.Z,{placeholder:"\u0425\u0430\u0439\u0445",prefix:(0,D.jsx)(p.Z,{}),onChange:function(e){return function(e){var n=e.currentTarget.value,t=e.currentTarget.value?W:X.allOnlineTests,i=y.ZP.wildCardSearch(t,n);U(i)}(e)}})})}),!0===n.create&&(0,D.jsx)("div",{className:"mr-md-3 mb-3",children:(0,D.jsxs)(o.Z,{onClick:function(){M("create"),L(!0)},type:"primary",icon:(0,D.jsx)(v.Z,{}),block:!0,children:[" ",(0,D.jsx)(Q.Z,{id:"add_new"})]})})]}),(0,D.jsx)("div",{className:"table-responsive",children:(0,D.jsx)(l.Z,{columns:ae,dataSource:W,rowKey:"id",bordered:!0,size:"small",locale:{emptyText:J||re?(0,D.jsx)(c.Z,{}):(0,D.jsx)(m.Z,{})}})})]})]})},z=t(59288),B=t(38937),H=function(e){var n={create:(0,z.C)("add_take_test"),edit:(0,z.C)("change_take_test"),destroy:(0,z.C)("delete_take_test"),add_question:(0,z.C)("add_question"),view_online_test:(0,z.C)("view_online_test")};return Object.values(n).indexOf("loading")>-1?(0,D.jsx)(B.Z,{cover:"content"}):(0,D.jsx)(E,{title:e.title,permissions:n})}}}]);
//# sourceMappingURL=1479.80ff324b.chunk.js.map