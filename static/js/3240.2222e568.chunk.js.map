{"version":3,"file":"static/js/3240.2222e568.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","graphql/mark.js","views/app-views/web-configs/mark-percentage/form.js","views/app-views/web-configs/mark-percentage/table.js","views/app-views/web-configs/mark-percentage/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ALL_MARK = gql `\r\n    query allMarks ($markBoard: Int!) {\r\n        allMarks (markBoard: $markBoard) {\r\n            id\r\n            student {\r\n                id\r\n                familyName\r\n                name\r\n                studentCode\r\n                classes {\r\n                    classes\r\n                }\r\n                section {\r\n                    section\r\n                }\r\n            }\r\n            markRelSet {\r\n                markVal\r\n                markSetting {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n            markBoard {\r\n                subject {\r\n                    subject\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK = gql `\r\n    mutation createMark ($section: Int = 0, $studentCode: String, $markBoard: Int) {\r\n        createMark (section: $section, studentCode: $studentCode, markBoard: $markBoard) {\r\n            mark {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_MARK = gql`\r\n    mutation deleteMark ($id: ID) {\r\n        deleteMark (id: $id) {\r\n            mark {\r\n                student {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK_REL = gql `\r\n    mutation createMarkRel ($mark: Int, $markSetting: Int, $markVal: String) {\r\n        createMarkRel (mark: $mark, markSetting: $markSetting, markVal: $markVal) {\r\n            markRel {\r\n                id\r\n                markVal\r\n                markSetting {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_MARK_RELS = gql `\r\n    query allMarkRels ($mark: Int!) {\r\n        allMarkRels (mark: $mark) {\r\n            mark {\r\n                student {\r\n                    id\r\n                    studentCode\r\n                }\r\n            }\r\n            markSetting {\r\n                name\r\n                percentage\r\n            }\r\n            markVal\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_MARK_PERCENTAGE = gql `\r\n    query allMarkPercentages {\r\n        allMarkPercentages {\r\n            id\r\n            type\r\n            percentage\r\n            diam\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK_PERCENTAGE = gql `\r\n    mutation createMarkPercentage ($diam: String, $percentage: Int, $type: String) {\r\n        createMarkPercentage (diam: $diam, percentage: $percentage, type: $type) {\r\n            markPercentage {\r\n                type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_MARK_PERCENTAGE = gql `\r\n    mutation updateMarkPercentage ($diam: String, $percentage: Int, $type: String, $id: ID) {\r\n        updateMarkPercentage (diam: $diam, percentage: $percentage, type: $type, id: $id) {\r\n            markPercentage {\r\n                type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_MARK_PERCENTAGE = gql `\r\n    mutation deleteMarkPercentage ($id: ID) {\r\n        deleteMarkPercentage (id: $id) {\r\n            markPercentage {\r\n                type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_BOARD_BY_ID = gql `\r\n    query markBoardById ($id: Int!) {\r\n        markBoardById (id: $id) {\r\n            id\r\n            schoolyear {\r\n                id\r\n                schoolyear\r\n            }\r\n            subject {\r\n                id\r\n                part\r\n                subject\r\n            }\r\n            teacher {\r\n                id\r\n                name\r\n            }\r\n            startAt \r\n            endAt\r\n            status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_MARK_BOARD = gql `\r\n    query allMarkBoards ($offset: Int!, $limit: Int!, $filter: String) {\r\n        count (appName: \"mark\", modelName: \"Mark_board\", filter: $filter) {\r\n            count\r\n        }\r\n        allMarkBoards (offset: $offset, limit: $limit, filter: $filter) {\r\n            id\r\n            schoolyear {\r\n                id\r\n                schoolyear\r\n                season\r\n            }\r\n            subject {\r\n                id\r\n                subject\r\n            }\r\n            teacher {\r\n                id\r\n                name\r\n            }\r\n            startAt \r\n            endAt\r\n            status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK_BOARD_FROM_ROUTINE = gql `\r\n    mutation createMarkBoardFromRoutine ($endAt: String, $routine: Int, $startAt: String, $status: String) {\r\n        createMarkBoardFromRoutine (endAt: $endAt, routine: $routine, startAt: $startAt, status: $status) {\r\n            markBoard {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_MARK_BOARD = gql `\r\n    mutation createMarkBoard ($endAt: String, $schoolyear: Int, $startAt: String, $status: String, $subject: Int, $teacher: Int) {\r\n        createMarkBoard (endAt: $endAt, schoolyear: $schoolyear, startAt: $startAt, status: $status, subject: $subject, teacher: $teacher) {\r\n            markBoard {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_MARK_BOARD = gql `\r\n    mutation updateMarkBoard ($endAt: String, $schoolyear: Int, $startAt: String, $status: String, $subject: Int, $teacher: Int, $id: ID) {\r\n        updateMarkBoard (endAt: $endAt, schoolyear: $schoolyear, startAt: $startAt, status: $status, subject: $subject, teacher: $teacher, id: $id) {\r\n            markBoard {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_MARK_BOARD = gql `\r\n    mutation deleteMarkBoard ($id: ID) {\r\n        deleteMarkBoard (id: $id) {\r\n            markBoard {\r\n                startAt\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_MARK_SETTING = gql `\r\n    query allMarkSettings {\r\n        allMarkSettings {\r\n            id\r\n            name\r\n            part\r\n            passVal\r\n            percentage\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MARK_SETTINGS_BY_PART = gql`\r\n    query markSettingsByPart ($part: String!) {\r\n        markSettingsByPart (part: $part) {\r\n            id\r\n            name\r\n            part\r\n            passVal\r\n            percentage\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_MARK_SETTING = gql `\r\n    mutation createMarkSetting ($name: String, $percentage: Int, $part: String, $passVal: Int) {\r\n        createMarkSetting (name: $name, percentage: $percentage, part: $part, passVal: $passVal) {\r\n            markSetting {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_MARK_SETTING = gql `\r\n    mutation updateMarkSetting ($name: String, $percentage: Int, $id: ID, $part: String, $passVal: Int) {\r\n        updateMarkSetting (name: $name, percentage: $percentage, id: $id, part: $part, passVal: $passVal) {\r\n            markSetting {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_MARK_SETTING = gql `\r\n    mutation deleteMarkSetting($id: ID) {\r\n        deleteMarkSetting (id: $id) {\r\n            markSetting {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`","import React, { useEffect } from 'react';\r\nimport { Form, Input, message, Spin, Row, Col, Button, InputNumber  } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { CREATE_MARK_PERCENTAGE, UPDATE_MARK_PERCENTAGE, ALL_MARK_PERCENTAGE } from 'graphql/mark';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nfunction MarkPercentageForm ({formType, editData, setIsModalVisible}) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [createMarkPercentage, { loading: createLoading, error, called }] = useMutation(CREATE_MARK_PERCENTAGE, {\r\n        refetchQueries: [ALL_MARK_PERCENTAGE],\r\n\t\tonCompleted: data => {\r\n            setIsModalVisible(false);\r\n\t\t}\r\n\t});\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_MARK_PERCENTAGE, {\r\n        refetchQueries: [ALL_MARK_PERCENTAGE],\r\n        onCompleted: data => {\r\n            message.success('Амжилттай хадгаллаа');\r\n            setIsModalVisible(false);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(formType === \"edit\") {\r\n            form.setFieldsValue(editData);\r\n        } else if(formType === \"create\") {\r\n            form.resetFields();\r\n        }\r\n        if (called === true) {\r\n            message.success('Амжилттай хадгаллаа');\r\n        }\r\n    }, [called, editData, form, formType]);\r\n\r\n    \r\n\r\n    const onFinish = values => {\r\n\r\n        if(formType === \"edit\") {\r\n            values.id = editData.id;\r\n            update({ variables: values })\r\n        } else {\r\n            values.fields.map(function(hmm) {\r\n                let i = hmm.minPercentage;\r\n                let n = hmm.maxPercentage;\r\n            \r\n                for (i; i <= n; i++) {\r\n                    let variable = {\r\n                        diam: hmm.diam,\r\n                        type: hmm.type ,\r\n                        percentage: i\r\n                    }\r\n                    createMarkPercentage({ variables: variable})\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    };\r\n        \r\n    if (error) message.error(`${error.message}`);\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form  \r\n                id=\"MarkPercentageForm\"\r\n                                layout={'vertical'}\r\n                form={form}\r\n                name=\"control-hooks\" \r\n                onFinish={onFinish}\r\n            >\r\n                { formType === 'create' ? \r\n                    <Form.List name=\"fields\">\r\n                        {(fields, { add, remove }) => {\r\n                            return (\r\n                            <Row gutter={[16, 16]}>\r\n                                {fields.map((field, index) => (\r\n                                <Col span={8} key={field.key}>\r\n                                    <Form.Item\r\n                                        name={[index, \"type\"]}\r\n                                        label=\"Үнэлгээ\"\r\n                                        rules={[\r\n                                            { \r\n                                                required: true,\r\n                                                message: \"Хоосон орхих боломжгүй\"\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"Үнэлгээ\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Үнэлгээний дээд / доод хувь\"\r\n                                    >\r\n                                        <Input.Group compact>\r\n                                            <Form.Item\r\n                                                name={[index, \"maxPercentage\"]}\r\n                                                noStyle\r\n                                                rules={[\r\n                                                    { \r\n                                                        required: true,\r\n                                                        message: \"Хоосон орхих боломжгүй\"\r\n                                                    },\r\n                                                    () => ({\r\n                                                        validator(_, value) {\r\n                                                            if (value?.length > 3 || value > 100) {\r\n                                                                return Promise.reject(\"100-аас дээш тоо оруулах боломжгүй\");\r\n                                                            }\r\n                                                            return Promise.resolve();\r\n                                                        },\r\n                                                    }),\r\n                                                ]}\r\n                                            >\r\n                                                <InputNumber min={1} placeholder=\"Дээд хувь\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name={[index, \"minPercentage\"]}\r\n                                                noStyle\r\n                                                rules={[\r\n                                                    { \r\n                                                        required: true,\r\n                                                        message: \"Хоосон орхих боломжгүй\"\r\n                                                    },\r\n                                                    () => ({\r\n                                                        validator(_, value) {\r\n                                                            if (value?.length > 3 || value > 100) {\r\n                                                                return Promise.reject(\"100-аас дээш тоо оруулах боломжгүй\");\r\n                                                            }\r\n                                                            return Promise.resolve();\r\n                                                        },\r\n                                                    }),\r\n                                                ]}\r\n                                            >\r\n                                                <InputNumber style={{ marginLeft: '10px' }} min={0} placeholder=\"Доод хувь\" />\r\n                                            </Form.Item>\r\n                                        </Input.Group>\r\n                                    </Form.Item>\r\n                                    <Form.Item \r\n                                        name={[index, \"diam\"]} \r\n                                        label=\"Үнэлгээний голч\"\r\n                                        rules={[\r\n                                            { \r\n                                                required: true,\r\n                                                message: \"Хоосон орхих боломжгүй\"\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"Үнэлгээний голч\" />\r\n                                    </Form.Item>\r\n                                    {fields.length > 1 ? (\r\n                                    <Button\r\n                                        type=\"primary\" danger\r\n                                        onClick={() => remove(field.name)}\r\n                                        icon={<MinusCircleOutlined />}\r\n                                    >\r\n                                        Устгах\r\n                                    </Button>\r\n                                    ) : null}\r\n                                </Col>\r\n                                ))}\r\n                                <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: \"100%\", margin: \"29px\" }}\r\n                                    >\r\n                                        <PlusOutlined /> <IntlMessage id=\"add-field\" />\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Row >\r\n                            );\r\n                        }}\r\n                    </Form.List>\r\n                    :\r\n                    <>\r\n                        <Form.Item\r\n                            name=\"type\"\r\n                            label=\"Үнэлгээ\"\r\n                            rules={[\r\n                                { \r\n                                    required: true,\r\n                                    message: \"Хоосон орхих боломжгүй\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"Үнэлгээ\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"percentage\"\r\n                            label=\"Үнэлгээний дээд / доод хувь\"\r\n                        >\r\n                            <InputNumber style={{ width: \"100%\" }} min={0} placeholder=\"Доод хувь\" />\r\n                        </Form.Item>\r\n                        <Form.Item \r\n                            name=\"diam\"\r\n                            label=\"Үнэлгээний голч\"\r\n                            rules={[\r\n                                { \r\n                                    required: true,\r\n                                    message: \"Хоосон орхих боломжгүй\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"Үнэлгээний голч\" />\r\n                        </Form.Item>\r\n                    </>\r\n                }\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default MarkPercentageForm","import React, { useState, useEffect } from 'react'\r\nimport { Card, Table, Input, Spin, Empty, Modal, message, Button } from 'antd';\r\nimport { DeleteTwoTone, SearchOutlined, EditTwoTone, PlusCircleOutlined } from '@ant-design/icons';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport utils from 'utils'\r\nimport MarkPercentageForm from './form'\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { ALL_MARK_PERCENTAGE, DELETE_MARK_PERCENTAGE } from 'graphql/mark'\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nfunction  MarkPercentageTable (props) {\r\n\r\n\tconst { loading, data: markPercentageData } = useQuery(ALL_MARK_PERCENTAGE, {\r\n\t});\r\n    \r\n\tconst [list, setList] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if(loading === false && markPercentageData){\r\n            setList(markPercentageData.allMarkPercentages);\r\n        }\r\n    }, [loading, markPercentageData])\r\n\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [editData, setEditData] = useState([]);\r\n\tconst [formType, setFormType] = useState(\"\");\r\n\r\n    const showModal = () => {\r\n\t\tsetFormType(\"create\");\r\n      \tsetIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n      \tsetIsModalVisible(false);\r\n    };\r\n\r\n\tconst editRow = row => {\r\n\t\tsetFormType(\"edit\");\r\n\t\tsetEditData(row);\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst { confirm } = Modal;\r\n\r\n\tconst [deleteMarkPercentage, { loading: loadingDelete }] = useMutation(DELETE_MARK_PERCENTAGE, {\r\n\t\trefetchQueries: [ALL_MARK_PERCENTAGE],\r\n\t\tonCompleted: data => {\r\n            message.success('Амжилттай устлаа');\r\n\t\t}\r\n\t});\r\n\t\r\n\tfunction deleteRow(row) {\r\n\t\tconfirm({\r\n\t\t  title: 'Устгах уу?',\r\n\t\t  okText: 'Устгах',\r\n\t\t  okType: 'danger',\r\n\t\t  cancelText: 'Болих',\r\n\t\t  onOk() {\r\n\t\t\tdeleteMarkPercentage({ variables: { id: row.id } }); \r\n\t\t  },\r\n\t\t});\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\tkey: 'type',\r\n\t\t\ttitle: <IntlMessage id=\"mark.type\" />,\r\n\t\t\tdataIndex: 'type',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type')\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'percentage',\r\n\t\t\ttitle: <IntlMessage id=\"mark.percentage\" />,\r\n\t\t\tdataIndex: 'percentage',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'percentage')\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'diam',\r\n\t\t\ttitle: <IntlMessage id=\"mark.diam\" />,\r\n\t\t\tdataIndex: 'diam',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'diam')\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'actions',\r\n\t\t\ttitle: <IntlMessage id=\"main.action\" />,\r\n\t\t\twidth: `20vw`,\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t{ props.permissions.edit === true &&\r\n\t\t\t\t\t\t<Button size='small' type='text' key=\"2\" onClick={() => editRow(elm)}>\r\n\t\t\t\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t<EditTwoTone twoToneColor=\"#ffdb00\"/>\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2\"> <IntlMessage id=\"edit\" /></span>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{ props.permissions.destroy === true &&\r\n\t\t\t\t\t\t<Button size='small' type='text' key=\"3\" onClick={() => deleteRow(elm)}>\r\n\t\t\t\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t<DeleteTwoTone twoToneColor=\"#f42f2f\"/>\r\n\t\t\t\t\t\t\t\t<span className=\"ml-2\"> <IntlMessage id=\"delete\" /></span>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\r\n    \r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : markPercentageData.allMarkPercentages\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n                visible={isModalVisible} \r\n\t\t\t\tokText={<IntlMessage id=\"main.okText\" />}\r\n\t\t\t\tcancelText={<IntlMessage id=\"main.cancelText\" />}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tokButtonProps={{form:'MarkPercentageForm', key: 'submit', htmlType: 'submit'}}\r\n            >\r\n                <MarkPercentageForm editData={editData} formType={formType} setIsModalVisible={setIsModalVisible} />\r\n            </Modal>\r\n\t\t\t<Card>\r\n\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Input placeholder={'Хайх'} prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t{ props.permissions.create === true && \r\n\t\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t\t<Button onClick={showModal} type=\"primary\" icon={<PlusCircleOutlined />} block> <IntlMessage id=\"add_new\" /></Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t<Table \r\n\t\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\t\tdataSource={list}\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\trowKey='id'  \r\n\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\tlocale={{\r\n\t\t\t\t\t\t\temptyText: loading || loadingDelete ? <Spin /> : <Empty />\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default MarkPercentageTable\r\n","import React from \"react\";\r\nimport MarkPercentageTable from './table';\r\nimport { CheckPer } from 'hooks/checkPermission';\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nconst Index = () => {\r\n\r\n    const create = CheckPer('add_mark_percentage');\r\n    const edit = CheckPer('change_mark_percentage');\r\n    const destroy = CheckPer('delete_mark_percentage');\r\n\r\n    const permissions = {\r\n        create: create,\r\n        edit: edit,\r\n        destroy: destroy\r\n    }\r\n\r\n    if (Object.values(permissions).indexOf('loading') > -1) {\r\n        return <Loading cover=\"content\" />\r\n    }\r\n\r\n    return (\r\n        <MarkPercentageTable permissions={permissions} />\r\n    )\r\n}\r\n\r\nexport default Index;"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","ALL_MARK","gql","CREATE_MARK","DELETE_MARK","CREATE_MARK_REL","ALL_MARK_PERCENTAGE","CREATE_MARK_PERCENTAGE","UPDATE_MARK_PERCENTAGE","DELETE_MARK_PERCENTAGE","MARK_BOARD_BY_ID","ALL_MARK_BOARD","CREATE_MARK_BOARD_FROM_ROUTINE","CREATE_MARK_BOARD","UPDATE_MARK_BOARD","DELETE_MARK_BOARD","ALL_MARK_SETTING","MARK_SETTINGS_BY_PART","CREATE_MARK_SETTING","UPDATE_MARK_SETTING","DELETE_MARK_SETTING","formType","editData","setIsModalVisible","Form","form","useMutation","refetchQueries","onCompleted","data","createMarkPercentage","createLoading","loading","error","called","message","update","updateLoading","useEffect","setFieldsValue","resetFields","spinning","tip","id","layout","name","onFinish","values","variables","fields","map","hmm","i","minPercentage","n","maxPercentage","variable","diam","type","percentage","add","remove","gutter","field","index","span","label","rules","required","placeholder","compact","noStyle","validator","_","value","length","Promise","reject","resolve","min","style","marginLeft","danger","onClick","icon","MinusCircleOutlined","key","width","margin","PlusOutlined","IntlMessage","useQuery","markPercentageData","useState","undefined","list","setList","allMarkPercentages","isModalVisible","setEditData","setFormType","confirm","Modal","deleteMarkPercentage","loadingDelete","tableColumns","title","dataIndex","sorter","a","b","utils","render","elm","permissions","edit","size","row","editRow","EditTwoTone","twoToneColor","destroy","okText","okType","cancelText","onOk","deleteRow","DeleteTwoTone","visible","onCancel","okButtonProps","htmlType","prefix","SearchOutlined","onChange","e","currentTarget","searchArray","onSearch","create","PlusCircleOutlined","block","columns","dataSource","rowKey","bordered","locale","emptyText","CheckPer","Object","indexOf","Loading","cover"],"sourceRoot":""}