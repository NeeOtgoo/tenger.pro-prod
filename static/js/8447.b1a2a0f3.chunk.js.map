{"version":3,"file":"static/js/8447.b1a2a0f3.chunk.js","mappings":"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","sources":["views/app-views/web-configs/group-permission/transfer.js","views/app-views/web-configs/group-permission/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Transfer, Table, Card, Tag } from 'antd';\r\nimport difference from 'lodash/difference';\r\n\r\nconst tableColumns = [\r\n    {\r\n        dataIndex: 'title',\r\n        title: 'Нэр',\r\n        render: (text, record) => (\r\n            <Tag color={record.color} >{text}</Tag>\r\n        ),\r\n    },\r\n];\r\n\r\nconst TableTransfer = ({ loading, ...restProps }) => (\r\n    <Transfer\r\n        {...restProps} \r\n        showSelectAll={false}\r\n    >\r\n        {({\r\n            filteredItems,\r\n            onItemSelectAll,\r\n            onItemSelect,\r\n            selectedKeys: listSelectedKeys,\r\n        }) => {\r\n            const columns = tableColumns;\r\n\r\n            const rowSelection = {\r\n                getCheckboxProps: item => ({ disabled: item.disabled }),\r\n                onSelectAll(selected, selectedRows) {\r\n                    const treeSelectedKeys = selectedRows\r\n                        .filter(item => !item.disabled)\r\n                        .map(({ key }) => key);\r\n                    const diffKeys = selected\r\n                        ? difference(treeSelectedKeys, listSelectedKeys)\r\n                        : difference(listSelectedKeys, treeSelectedKeys);\r\n                    onItemSelectAll(diffKeys, selected);\r\n                },\r\n                onSelect({ key }, selected) {\r\n                    onItemSelect(key, selected);\r\n                },\r\n                selectedRowKeys: listSelectedKeys,\r\n            };\r\n\r\n            return (\r\n                <Table\r\n                    loading={loading}\r\n                    rowSelection={rowSelection}\r\n                    columns={columns}\r\n                    dataSource={filteredItems}\r\n                    size=\"small\"\r\n                    style={{ pointerEvents: null }}\r\n                    onRow={({ key, disabled: itemDisabled }) => ({\r\n                        onClick: () => {\r\n                        if (itemDisabled) return;\r\n                            onItemSelect(key, !listSelectedKeys.includes(key));\r\n                        },\r\n                    })}\r\n                />\r\n            );\r\n        }}\r\n    </Transfer>\r\n);\r\n\r\nconst TransferCard = ({ data, permissions, loading, updateData }) => {\r\n\r\n    const targetKeys = data.permissions.map((selected) => (\r\n        selected.codename\r\n    ))\r\n\r\n    const onChange = (targetKeys, direction, moveKeys) => {\r\n        const action = direction === 'left' ? false : true\r\n        moveKeys.map((codename) => (\r\n            updateData({ variables: { action: action, codename: codename, id: data.id } })\r\n        ))\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            title={data.name}\r\n        >\r\n            <TableTransfer\r\n                loading={loading}\r\n                dataSource={permissions}\r\n                targetKeys={targetKeys}\r\n                showSearch={true}\r\n                onChange={onChange}\r\n                filterOption={(inputValue, item) =>\r\n                    item.title.toLowerCase().indexOf(inputValue) !== -1\r\n                }\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TransferCard;","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { ALL_GROUPS, PERMISSIONS, UPDATE_GROUP_PERMISSION } from \"graphql/role\";\r\nimport TransferCard from './transfer';\r\nimport { Tag } from \"antd\";\r\n\r\nconst Index = () => {\r\n\r\n    const [groups, setGroups] = useState([]);\r\n    const [permissions, setPermissions] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const { loading: groupLoading, refetch } = useQuery(ALL_GROUPS, {\r\n        onCompleted: data => {\r\n            setGroups(data.allGroups);\r\n            fetchPermissions();\r\n        }\r\n    })\r\n\r\n    const [fetchPermissions, { loading: permissionLoading }] = useLazyQuery(PERMISSIONS, {\r\n        onCompleted: data => {\r\n            const filterData = data.permissions.flatMap(function(permission) {\r\n                \r\n                const children = []\r\n                \r\n                permission.add && children.push({ \r\n                    key: `add_${permission.codeName}`, \r\n                    title: `${permission.name} нэмэх`,\r\n                    color: 'green'\r\n                })\r\n                permission.change && children.push({ \r\n                    key: `change_${permission.codeName}`, \r\n                    title: `${permission.name} засах`,\r\n                    color: 'orange'\r\n                })\r\n                permission.view && children.push({ \r\n                    key: `view_${permission.codeName}`, \r\n                    title: `${permission.name} харах`,\r\n                    color: 'geekblue'\r\n                })\r\n                permission.delete && children.push({ \r\n                    key: `delete_${permission.codeName}`, \r\n                    title: `${permission.name} устгах`,\r\n                    color: 'magenta'\r\n                })\r\n                \r\n                return children\r\n            })\r\n            setPermissions(filterData);\r\n        }\r\n    })\r\n\r\n    const [update, { loading: updateLoading}] = useMutation(UPDATE_GROUP_PERMISSION, {\r\n        onCompleted: data => {\r\n            refetch();\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (groupLoading || permissionLoading || updateLoading) {\r\n            setIsLoading(true);\r\n        }\r\n        if (!groupLoading && !permissionLoading && !updateLoading) {\r\n            setIsLoading(false);\r\n        }\r\n    }, [groupLoading, permissionLoading, updateLoading])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-4\">\r\n                <Tag color=\"green\">Нэмэх эрх</Tag>\r\n                <Tag color=\"orange\">Засах эрх</Tag>\r\n                <Tag color=\"geekblue\">Харах эрх</Tag>\r\n                <Tag color=\"magenta\">Устгах эрх</Tag>\r\n            </div>\r\n            { groups.map((item, index) => (\r\n                <TransferCard \r\n                    updateData={update}\r\n                    loading={isLoading}\r\n                    data={item}\r\n                    key={index}\r\n                    permissions={permissions}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n"],"names":["tableColumns","dataIndex","title","render","text","record","color","TableTransfer","loading","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","columns","rowSelection","getCheckboxProps","item","disabled","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","map","key","diffKeys","difference","onSelect","selectedRowKeys","dataSource","size","style","pointerEvents","onRow","itemDisabled","onClick","includes","data","permissions","updateData","targetKeys","codename","name","showSearch","onChange","direction","moveKeys","action","variables","id","filterOption","inputValue","toLowerCase","indexOf","useState","groups","setGroups","setPermissions","isLoading","setIsLoading","useQuery","ALL_GROUPS","onCompleted","allGroups","fetchPermissions","groupLoading","refetch","useLazyQuery","PERMISSIONS","filterData","flatMap","permission","children","add","push","codeName","change","view","delete","permissionLoading","useMutation","UPDATE_GROUP_PERMISSION","update","updateLoading","useEffect","className","index"],"sourceRoot":""}