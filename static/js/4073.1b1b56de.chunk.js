"use strict";(self.webpackChunkemind=self.webpackChunkemind||[]).push([[4073],{68470:function(n,e,t){t(72791);var r=t(80184),a=function(n){var e=n.children,t=n.className,a=n.alignItems,s=n.justifyContent,i=n.mobileFlex,o=n.flexDirection;return(0,r.jsx)("div",{className:"".concat(i?"d-flex":"d-md-flex"," ").concat(t," ").concat(o?"flex-"+o:""," ").concat(a?"align-items-"+a:""," ").concat(s?"justify-content-"+s:""),children:e})};a.defaultProps={mobileFlex:!0,flexDirection:"row",className:""},e.Z=a},41920:function(n,e,t){t.d(e,{$_:function(){return L},Be:function(){return J},Dp:function(){return _},Fm:function(){return U},J7:function(){return V},Ko:function(){return H},MA:function(){return k},NC:function(){return O},O8:function(){return z},TW:function(){return A},Vr:function(){return w},YP:function(){return Q},YV:function(){return G},gw:function(){return M},nS:function(){return R},nh:function(){return K},pQ:function(){return F},q:function(){return nn},r1:function(){return X},tz:function(){return Y},vh:function(){return W},vp:function(){return B}});var r,a,s,i,o,d,l,u,c,m,$,h,g,S,p,f,y,Z,x,j,b,I,D,v,P,C,N,q,T=t(30168),E=t(27570),A=(0,E.Ps)(r||(r=(0,T.Z)(["\n    query allSubjects ($offset: Int!, $limit: Int!, $filter: String) {\n        allSubjects (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            part\n            school {\n                id\n                name\n            }\n            subSchool {\n                id\n                name\n            }\n            subject \n            subjectMgl\n            subjectCode\n            credit\n        }\n    }\n"]))),M=((0,E.Ps)(a||(a=(0,T.Z)(["\n    query allTeacherStatuss {\n        allTeacherStatuss {\n            id\n            name\n        }\n    }\n"]))),(0,E.Ps)(s||(s=(0,T.Z)(["\n    query allStudentStatuss {\n        allStudentStatuss {\n            id\n            name\n        }\n    }\n"]))),(0,E.Ps)(i||(i=(0,T.Z)(["\n    query allStudentStatusExtras {\n        allStudentStatusExtras {\n            id\n            name\n        }\n    }\n"]))),(0,E.Ps)(o||(o=(0,T.Z)(["\n    query allUsers {\n        allUsers {\n            id\n            username\n            email\n        }\n    }\n"])))),B=((0,E.Ps)(d||(d=(0,T.Z)(["\n    query userByUsername($username: String!) {\n        userByUsername(username: $username) {\n            id\n            username\n        }\n    }\n"]))),(0,E.Ps)(l||(l=(0,T.Z)(["\n    query employeesAttandanceByRange ($startDate: DateTime!, $endDate: DateTime!) {\n        employeesAttandanceByRange (startDate: $startDate, endDate: $endDate) {\n            id\n            isIn\n            isOut\n            timeIn\n            timeOut\n            user {\n                id\n                isTeacher\n                isEmployee\n                teacher {\n                    familyName\n                    name\n                    teacherCode\n                }\n                employee {\n                    familyName\n                    name\n                    employeeCode\n                }\n                groups {\n                    name\n                }\n            }\n        }\n    }\n"])))),k=((0,E.Ps)(u||(u=(0,T.Z)(["\n    query allAttendaceEmployees {\n        allAttendaceEmployees {\n            username\n            email\n            isTeacher\n            isEmployee\n            teacher {\n                teacherCode\n                familyName\n                name\n            }\n            employee {\n                employeeCode\n                familyName\n                name\n            }\n        }\n    }\n"]))),(0,E.Ps)(c||(c=(0,T.Z)(["\n    query allEmployeesCompartment {\n        allEmployeesCompartment {\n            id\n            name\n        }\n    }\n"])))),w=(0,E.Ps)(m||(m=(0,T.Z)(["\n    query allEmployees ($filter: String) {\n        allEmployees (filter: $filter) {\n            id\n            user {\n                id\n                username\n                email\n                groups {\n                    name\n                }\n            }\n            compartment {\n                id\n                name\n            }\n            employeeCode\n            familyName\n            name\n            registerNo\n            photo\n            phone\n            phone2\n            address\n            sex\n            birthdate\n            birthCity {\n                id\n            }\n            birthDistrict {\n                id\n            }\n            status {\n                id\n            }\n        }\n    }\n"]))),F=(0,E.Ps)($||($=(0,T.Z)(["\n  \tquery allTeachers ($offset: Int!, $limit: Int!, $filter: String) {\n        allTeachers (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            user {\n                id\n                username\n                email\n            }\n            teacherCode\n            familyName\n            name\n            registerNo\n            photo\n            phone\n            phone2\n            address\n            joinDate\n            joinBefore\n            sex\n            birthdate\n            birthCity {\n                id\n                name\n            }\n            birthDistrict {\n                id\n                name\n            }\n            status {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n            subSchool {\n                id\n                name\n            }\n        }\n\t}\n"]))),Y=(0,E.Ps)(h||(h=(0,T.Z)(["\n  \tquery allStudents ($filter: String, $program: Int, $classes: Int) {\n        allStudents (filter: $filter, program: $program, classes: $classes) {\n            id\n            user {\n                id\n                username\n                email\n            }\n            studentCode\n            familyName\n            name\n            photo\n            phone\n            phone2\n            address\n            registerNo\n            degree {\n                id\n                name\n            }\n            activity {\n                id\n                name\n            }\n            joinDate\n            joinBefore\n            sex\n            birthdate\n            classtime {\n                id\n                name\n            }\n            birthCity {\n                id\n                name\n            }\n            birthDistrict {\n                id\n                name\n            }\n            status {\n                id\n                name\n            }\n            statusExtra {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n            classes {\n                id\n                classes\n            }\n            section {\n                id\n                section\n            }\n            program {\n                id\n                program\n            }\n            joinSchoolyear {\n                id\n                schoolyear\n            }\n        }\n    }\n"]))),L=(0,E.Ps)(g||(g=(0,T.Z)(["\n  \tquery allCitys{\n        allCitys {\n            id\n            name\n            code\n        }\n\t}\n"]))),O=(0,E.Ps)(S||(S=(0,T.Z)(["\n    query allDistricts {\n        allDistricts {\n            id\n            code\n            name\n            cityID {\n                id\n                name\n            }\n        }\n    }\n"]))),Q=(0,E.Ps)(p||(p=(0,T.Z)(["\n  \tquery allPrograms{\n        allPrograms {\n            id\n            program\n            programMgl\n            programNumeric\n            maxStudentNum\n            degree {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n            subSchool {\n                id\n                name\n            }\n            status\n            createdAt\n            updatedAt\n        }\n\t  }\n"]))),U=(0,E.Ps)(f||(f=(0,T.Z)(["\n  \tquery allSchools {\n        allSchools {\n            id\n            name\n            nameMgl\n        }\n\t}\n"]))),z=(0,E.Ps)(y||(y=(0,T.Z)(["\n  \tquery allSubSchools{\n        allSubSchools {\n            id\n            name\n            nameMgl\n            school {\n                id\n                name\n            }\n\t\t}\n\t}\n"]))),V=(0,E.Ps)(Z||(Z=(0,T.Z)(["\n    query allSections {\n        allSections {\n            id\n            section\n            classes {\n                id\n                classes\n            }\n            program {\n                id\n                program\n            }\n            subSchool {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n            createdAt\n            updatedAt\n        }\n    }\n"]))),X=(0,E.Ps)(x||(x=(0,T.Z)(["\n    query allClassess ($program: Int!, $offset: Int!, $limit: Int!, $filter: String) {\n        allClassess (program: $program, offset: $offset, limit: $limit, filter: $filter) {\n            id\n            classes\n            classesMgl\n            classesNumeric\n            degree {\n                id\n                name\n            }\n            activity {\n                id\n                name\n            }\n            maxStudentNum\n            teacher {\n                id\n                name\n                teacherCode\n            }\n            program {\n                id\n                program\n            }\n            subSchool {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n            status\n            course\n            endCourse\n            sectionSet {\n                id\n                section\n                classes {\n                    id\n                    classes\n                }\n                program {\n                    id\n                    program\n                }\n                subSchool {\n                    id\n                    name\n                }\n                school {\n                    id\n                    name\n                }\n            }\n        }\n    }\n"]))),G=(0,E.Ps)(j||(j=(0,T.Z)(["\n    query allClasstimes {\n        allClasstimes {\n            id\n            name\n        }\n    }\n"]))),K=(0,E.Ps)(b||(b=(0,T.Z)(["\n    query allSchoolyears {\n        allSchoolyears {\n            id\n            schoolyear\n            season\n            semesterCode\n        }\n    }\n"]))),R=(0,E.Ps)(I||(I=(0,T.Z)(["\n    query allParents ($offset: Int!, $limit: Int!, $filter: String) {\n        allParents (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            user {\n                username\n                email\n            }\n            familyName\n            name\n            photo\n            profession\n            phone\n            address\n            addressLive\n            student {\n                id\n                studentCode\n                familyName\n                name\n            }\n        }\n    }\n"]))),W=(0,E.Ps)(D||(D=(0,T.Z)(["\n    query sectionsByClasses ($classes: Int!) {\n        sectionsByClasses (classes: $classes) {\n            id\n            section\n            classes {\n                id\n                classes\n            }\n            program {\n                id\n                program\n            }\n            subSchool {\n                id\n                name\n            }\n            school {\n                id\n                name\n            }\n        }\n    }\n"]))),_=(0,E.Ps)(v||(v=(0,T.Z)(["\n    query transfersByStudent ($student: Int!) {\n        transfersByStudent (student: $student) {\n            id\n            student {\n                familyName\n                name\n                photo\n                studentCode\n            }\n            school {\n                id\n                name\n            }\n            program {\n                id\n                program\n            }\n            classes {\n                id\n                classes\n            }\n            section {\n                id\n                section\n            }\n            status {\n                id\n                name\n            }\n            statusExtra {\n                id\n                name\n            }\n            classtime {\n                id\n                name\n            }\n            activity {\n                id\n                name\n            }\n            docDate\n            docNum\n            description\n            oldData\n        }\n    }\n"]))),J=(0,E.Ps)(P||(P=(0,T.Z)(["\n    query allEventTypes {\n        allEventTypes {\n            id\n            name\n            color\n        }\n    }\n"]))),H=(0,E.Ps)(C||(C=(0,T.Z)(["\n    query allEvents {\n        allEvents {\n            id\n            title\n            description\n            content\n            startAt\n            endAt\n            eventType {\n                id\n                name\n                color\n            }\n        }\n    } \n"]))),nn=(0,E.Ps)(N||(N=(0,T.Z)(["\n    query allEventsByDate ($date: Date) {\n        allEventsByDate (date: $date) {\n            id\n            title\n            description\n            content\n            startAt\n            endAt\n            eventType {\n                id\n                name\n                color\n            }\n        }\n    } \n"])));(0,E.Ps)(q||(q=(0,T.Z)(["\n    query allEventsByType ($id: Int!) {\n        allEventsByType (id: $id) {\n            id\n            title\n            description\n            content\n            startAt\n            endAt\n            eventType\n        }\n    }\n"])))},7378:function(n,e,t){t.d(e,{$1:function(){return on},$5:function(){return L},$Z:function(){return sn},Cz:function(){return Y},DQ:function(){return W},Ds:function(){return z},KB:function(){return w},LW:function(){return en},ME:function(){return dn},N0:function(){return H},Os:function(){return O},P_:function(){return rn},TQ:function(){return R},Ts:function(){return ln},UI:function(){return X},Ui:function(){return nn},WO:function(){return V},WV:function(){return Q},XJ:function(){return an},YV:function(){return tn},gi:function(){return U},jm:function(){return cn},l4:function(){return J},m1:function(){return F},qG:function(){return G},rP:function(){return un},re:function(){return _},w9:function(){return K},wZ:function(){return k}});var r,a,s,i,o,d,l,u,c,m,$,h,g,S,p,f,y,Z,x,j,b,I,D,v,P,C,N,q,T,E,A,M=t(30168),B=t(27570),k=(0,B.Ps)(r||(r=(0,M.Z)(["\n  \tquery allDegrees {\n        allDegrees {\n            id\n            name\n        }\n\t}\n"]))),w=(0,B.Ps)(a||(a=(0,M.Z)(["\n    mutation createDegree($name: String) {\n      createDegree(name: $name) {\n        degree {\n          id\n          name\n        }\n      }\n    }\n"]))),F=(0,B.Ps)(s||(s=(0,M.Z)(["\n    mutation updateDegree ($id: ID, $name: String) {\n        updateDegree (id: $id, name: $name) {\n            degree {\n                name\n            }\n        }\n    }\n"]))),Y=(0,B.Ps)(i||(i=(0,M.Z)(["\n    mutation deleteDegree($id: ID!){\n        deleteDegree(id: $id){\n            degree{\n                name\n            }\n        }\n    }\n"]))),L=(0,B.Ps)(o||(o=(0,M.Z)(["\n  \tquery allActivitys {\n        allActivitys {\n            id\n            name\n        }\n\t}\n"]))),O=(0,B.Ps)(d||(d=(0,M.Z)(["\n    mutation createActivity($name: String) {\n      createActivity(name: $name) {\n        activity {\n          id\n          name\n        }\n      }\n    }\n"]))),Q=(0,B.Ps)(l||(l=(0,M.Z)(["\n    mutation updateActivity ($id: ID, $name: String) {\n        updateActivity (id: $id, name: $name) {\n            activity {\n                name\n            }\n        }\n    }\n"]))),U=(0,B.Ps)(u||(u=(0,M.Z)(["\n    mutation deleteActivity($id: ID!){\n        deleteActivity(id: $id){\n            activity{\n                name\n            }\n        }\n    }\n"]))),z=(0,B.Ps)(c||(c=(0,M.Z)(["\n    query allStudentStatuss {\n        allStudentStatuss {\n            id\n            name\n        }\n    }\n"]))),V=(0,B.Ps)(m||(m=(0,M.Z)(["\n    mutation createStudentStatus($name: String) {\n        createStudentStatus(name: $name) {\n            studentStatus {\n                id\n                name\n            }\n        }\n    }\n"]))),X=(0,B.Ps)($||($=(0,M.Z)(["\n    mutation updateStudentStatus ($id: ID, $name: String) {\n        updateStudentStatus (id: $id, name: $name) {\n            studentStatus {\n                id\n                name\n            }\n        }\n    }\n"]))),G=(0,B.Ps)(h||(h=(0,M.Z)(["\n    mutation deleteStudentStatus ($id: ID) {\n        deleteStudentStatus (id: $id) {\n            studentStatus {\n                name\n            }\n        }\n    }\n"]))),K=(0,B.Ps)(g||(g=(0,M.Z)(["\n    query allStudentStatusExtras {\n        allStudentStatusExtras {\n            id\n            name\n        }\n    }\n"]))),R=(0,B.Ps)(S||(S=(0,M.Z)(["\n    mutation createStudentStatusExtra($name: String) {\n        createStudentStatusExtra(name: $name) {\n            studentStatusExtra {\n                id\n                name\n            }\n        }\n    }\n"]))),W=(0,B.Ps)(p||(p=(0,M.Z)(["\n    mutation updateStudentStatusExtra ($id: ID, $name: String) {\n        updateStudentStatusExtra (id: $id, name: $name) {\n            studentStatusExtra {\n                id\n                name\n            }\n        }\n    }\n"]))),_=(0,B.Ps)(f||(f=(0,M.Z)(["\n    mutation deleteStudentStatusExtra ($id: ID) {\n        deleteStudentStatusExtra (id: $id) {\n            studentStatusExtra {\n                name\n            }\n        }\n    }\n"]))),J=(0,B.Ps)(y||(y=(0,M.Z)(["\n    query allTeacherStatuss {\n        allTeacherStatuss {\n            id\n            name\n        }\n    }\n"]))),H=(0,B.Ps)(Z||(Z=(0,M.Z)(["\n    mutation createTeacherStatus($name: String) {\n        createTeacherStatus(name: $name) {\n            teacherStatus {\n                id\n                name\n            }\n        }\n    }\n"]))),nn=(0,B.Ps)(x||(x=(0,M.Z)(["\n    mutation updateTeacherStatus ($id: ID, $name: String) {\n        updateTeacherStatus (id: $id, name: $name) {\n            teacherStatus {\n                id\n                name\n            }\n        }\n    }\n"]))),en=(0,B.Ps)(j||(j=(0,M.Z)(["\n    mutation deleteTeacherStatus ($id: ID) {\n        deleteTeacherStatus (id: $id) {\n            teacherStatus {\n                name\n            }\n        }\n    }\n"]))),tn=(0,B.Ps)(b||(b=(0,M.Z)(["\n    query allClasstimes {\n        allClasstimes {\n            id\n            name\n        }\n    }\n"]))),rn=(0,B.Ps)(I||(I=(0,M.Z)(["\n    mutation createClasstime($name: String) {\n        createClasstime(name: $name) {\n            classtime {\n                id\n                name\n            }\n        }\n    }\n"]))),an=(0,B.Ps)(D||(D=(0,M.Z)(["\n    mutation updateClasstime ($id: ID, $name: String) {\n        updateClasstime (id: $id, name: $name) {\n            classtime {\n                id\n                name\n            }\n        }\n    }\n"]))),sn=(0,B.Ps)(v||(v=(0,M.Z)(["\n    mutation deleteClasstime ($id: ID) {\n        deleteClasstime (id: $id) {\n            classtime {\n                name\n            }\n        }\n    }\n"]))),on=(0,B.Ps)(P||(P=(0,M.Z)(["\n    mutation createRoutine ($classes: Int, $endDate: Date, $program: Int, $room: String, $schoolyear: Int, $section: Int, $startDate: Date, \n                            $subject: Int, $teacher: Int, $time: Int, $type: String, $weekly: Int) {\n        createRoutine (classes: $classes, endDate: $endDate, program: $program, room: $room, schoolyear: $schoolyear, section: $section, \n                        startDate: $startDate, subject: $subject, teacher: $teacher, time: $time, type: $type, weekly: $weekly) {\n            routine {\n                id\n            }\n        }\n    }\n"]))),dn=((0,B.Ps)(C||(C=(0,M.Z)(["\n    query allMenus{\n        allMenus {\n            priority\n            key\n            path\n            title\n            icon\n            breadcrumb\n            subMenu\n            menuSet {\n                priority\n                key\n                path\n                title\n                icon\n                breadcrumb\n                subMenu\n            }\n        }\n    }\n"]))),(0,B.Ps)(N||(N=(0,M.Z)(["\n    mutation updateMenu($breadcrumb: Boolean, $icon: String, $id: ID, $priority: Int, $status: String, $submenu: Int) {\n        updateMenu (breadcrumb: $breadcrumb, icon: $icon, id: $id, priority: $priority, status: $status, submenu: $submenu) {\n            menu {\n                id\n            }\n        }\n    }\n"]))),(0,B.Ps)(q||(q=(0,M.Z)(["\n    query allSchoolyears {\n        allSchoolyears {\n            id\n            schoolyear\n            season\n            semesterCode\n            startDate\n            endDate\n            isCurrent\n        }\n    }\n"])))),ln=(0,B.Ps)(T||(T=(0,M.Z)(["\n    mutation createSchoolyear ($endDate: String, $schoolyear: String, $season: String, $semesterCode: String, $startDate: String, $isCurrent: Boolean) {\n        createSchoolyear (endDate: $endDate, schoolyear: $schoolyear, season: $season, semesterCode: $semesterCode, startDate: $startDate, isCurrent: $isCurrent) {\n            schoolyear {\n                schoolyear\n            }\n        }\n    }\n"]))),un=(0,B.Ps)(E||(E=(0,M.Z)(["\n    mutation updateSchoolyear ($endDate: String, $id: ID, $schoolyear: String, $season: String, $semesterCode: String, $startDate: String, $isCurrent: Boolean) {\n        updateSchoolyear (endDate: $endDate, id: $id, schoolyear: $schoolyear, season: $season, semesterCode: $semesterCode, startDate: $startDate, isCurrent: $isCurrent) {\n            schoolyear {\n                schoolyear\n            }\n        }\n    }\n"]))),cn=(0,B.Ps)(A||(A=(0,M.Z)(["\n    mutation deleteSchoolyear ($id: ID) {\n        deleteSchoolyear (id: $id) {\n            schoolyear {\n                schoolyear\n            }\n        }\n    }\n"])))},68694:function(n,e,t){t.d(e,{Cm:function(){return h},Cx:function(){return m},FQ:function(){return $},JX:function(){return c},dT:function(){return g},tL:function(){return S}});var r,a,s,i,o,d,l=t(30168),u=t(27570),c=(0,u.Ps)(r||(r=(0,l.Z)(["\n    query allStudents ($filter: String) {\n        allStudents (filter: $filter) {\n            id\n            familyName\n            name\n            studentCode\n        }\n\t}\n"]))),m=(0,u.Ps)(a||(a=(0,l.Z)(["\n    query allTeachers ($filter: String) {\n        allTeachers (filter: $filter) {\n            id\n            familyName\n            name\n            teacherCode\n        }\n    }\n"]))),$=(0,u.Ps)(s||(s=(0,l.Z)(["\n    query allClassess ($filter: String, $program: Int) {\n        allClassess (filter: $filter, program: $program) {\n            id\n            classes\n            classesNumeric\n        }\n\t}\n"]))),h=(0,u.Ps)(i||(i=(0,l.Z)(['\n    query allSubjects ($offset: Int!, $limit: Int!, $filter: String) {\n        count (appName: "subject", modelName: "Subject", filter: $filter) {\n            count\n        }\n        allSubjects (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            subject \n            subjectCode\n            credit\n        }\n    }\n']))),g=(0,u.Ps)(o||(o=(0,l.Z)(["\n    query selectProgram {\n        allPrograms {\n            id\n            program\n            programNumeric\n        }\n    }\n"]))),S=(0,u.Ps)(d||(d=(0,l.Z)(["\n    query sectionsByProgram ($program: Int!) {\n        sectionsByProgram (program: $program) {\n            id\n            section \n            classes {\n                classes\n            }\n        }\n    }\n"])))},82259:function(n,e,t){t.d(e,{Gr:function(){return I},Nb:function(){return f},XA:function(){return N},Xk:function(){return v},Y5:function(){return P},YK:function(){return D},Z_:function(){return b},aY:function(){return q},fG:function(){return x},hX:function(){return Z},uG:function(){return j},vF:function(){return y},x:function(){return C}});var r,a,s,i,o,d,l,u,c,m,$,h,g,S=t(30168),p=t(27570),f=(0,p.Ps)(r||(r=(0,S.Z)(["\n    mutation updateSubject ($credit: String, $part: String, $id: ID, $school: Int, $subSchool: Int, $subject: String, $subjectCode: String, $subjectMgl: String) {\n        updateSubject (credit: $credit id: $id, part: $part, school: $school, subSchool: $subSchool, subject: $subject, subjectCode: $subjectCode, subjectMgl: $subjectMgl) {\n            subject {\n                subject\n            }\n        }\n    }\n"]))),y=(0,p.Ps)(a||(a=(0,S.Z)(["\n    mutation updateSchool($id: ID, $name: String, $nameMgl: String){\n        updateSchool (id: $id, name: $name, nameMgl: $nameMgl){\n            school {\n                name\n                nameMgl\n            }\n        }\n    }\n"]))),Z=(0,p.Ps)(s||(s=(0,S.Z)(["\n    mutation updateSubSchool($id: ID, $name: String, $nameMgl: String, $school: Int) {\n        updateSubSchool (id: $id, name: $name, nameMgl: $nameMgl, school: $school) {\n            subSchool {\n                name\n            }\n        }\n    }\n"]))),x=(0,p.Ps)(i||(i=(0,S.Z)(["\n    mutation updateProgram ($id: ID, $program: String, $programMgl: String, $programNumeric: String, $status: String, $maxStudentNum: Int, $degree: Int, \n                            $school: Int, $subSchool: Int) {\n        updateProgram (id: $id, program: $program, programMgl: $programMgl, programNumeric: $programNumeric, status: $status, maxStudentNum: $maxStudentNum, \n                        degree: $degree, school: $school, subSchool: $subSchool) {\n            program {\n                program\n            }\n        }\n    }\n"]))),j=(0,p.Ps)(o||(o=(0,S.Z)(["\n    mutation updateClasses($id: ID, $activity: Int, $classes: String, $classesMgl: String, $classesNumeric: String, $course: String, $degree: Int, $endCourse: String,\n                          $maxStudentNum: Int, $program: Int, $school: Int, $status: String, $subSchool: Int, $teacher: Int) {\n        updateClasses(id: $id, activity: $activity, classes: $classes, classesMgl: $classesMgl, classesNumeric: $classesNumeric, course: $course, degree: $degree,\n                    endCourse: $endCourse, maxStudentNum: $maxStudentNum, program: $program, school: $school, status: $status, subSchool: $subSchool, teacher: $teacher) {\n            classes {\n                classes\n            }\n        }\n    }\n"]))),b=(0,p.Ps)(d||(d=(0,S.Z)(["\n    mutation updateSection($id: ID, $classes: Int, $program: Int, $school: Int, $subSchool: Int, $section: String) {\n        updateSection (id: $id, classes: $classes, program: $program, school: $school, subSchool: $subSchool, section: $section) {\n            section {\n                id\n            }\n        }\n    }\n"]))),I=(0,p.Ps)(l||(l=(0,S.Z)(["\n    mutation updateTeacher ($address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String, \n                            $familyName: String, $id: ID!, $joinBefore: String, $joinDate: String, $name: String, $phone: String, $phone2: String, $registerNo: String, \n                            $school: Int, $sex: String, $status: Int, $subSchool: Int, $teacherCode: String, $username: String, $email: String) {\n        updateTeacher (address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate,\n                        familyName: $familyName, id: $id, joinBefore: $joinBefore, joinDate: $joinDate, name: $name, phone: $phone, phone2: $phone2, \n                        registerNo: $registerNo, school: $school, sex: $sex, status: $status, subSchool: $subSchool, \n                        teacherCode: $teacherCode, username: $username, email: $email) {\n            teacher {\n                id\n            }\n        }\n    }\n"]))),D=(0,p.Ps)(u||(u=(0,S.Z)(["\n    mutation updateEmployee ($address: String, $birthCity: Int, $birthDistrict: Int, $birthdate: String, $employeeCode: String, $sex: String, $status: Int, \n                             $familyName: String, $group: Int, $id: Int, $name: String, $phone: String, $phone2: String, $registerNo: String, $compartment: Int,\n                             $username: String, $email: String) {\n        updateEmployee (address: $address, birthCity: $birthCity, birthDistrict: $birthDistrict, birthdate: $birthdate, employeeCode: $employeeCode, sex: $sex, status: $status,\n                        familyName: $familyName, group: $group, id: $id, name: $name, phone: $phone, phone2: $phone2, registerNo: $registerNo, compartment: $compartment,\n                        username: $username, email: $email) {\n                            employee{\n                                id\n                            }\n                        }\n                    }\n"]))),v=(0,p.Ps)(c||(c=(0,S.Z)(["\n    mutation updateParent ($address: String, $addressLive: String, $familyName: String, $id: ID, $name: String, $phone: String, $profession: String, $student: Int) {\n        updateParent (address: $address, addressLive: $addressLive, familyName: $familyName, id: $id, name: $name, phone: $phone, profession: $profession, student: $student) {\n            parent {\n                name\n            }\n        }\n    }\n"]))),P=(0,p.Ps)(m||(m=(0,S.Z)(["\n    mutation transferStudent ($activity: Int, $classes: Int, $classtime: Int, $description: String, $docDate: String, $docNum: String, $program: Int, $school: Int, \n                                $section: Int, $status: Int, $statusExtra: Int, $student: Int) {\n        transferStudent (activity: $activity, classes: $classes, classtime: $classtime, description: $description, docDate: $docDate, docNum: $docNum, program: $program, \n                        school: $school, section: $section, status: $status, statusExtra: $statusExtra, student: $student) {\n            transfer {\n                id\n            }\n        }\n    }\n"]))),C=(0,p.Ps)($||($=(0,S.Z)(["\n    mutation updateStudent (\n        $address: String\n        $birthCity: Int\n        $birthDistrict: Int\n        $birthdate: String\n        $degree: Int\n        $email: String\n        $familyName: String\n        $id: ID\n        $joinBefore: String\n        $joinDate: String\n        $joinSchoolyear: String\n        $name: String\n        $phone: String\n        $phone2: String\n        $registerNo: String\n        $sex: String\n        $studentCode: String\n        $username: String\n    ) {\n        updateStudent (\n            address: $address\n            birthCity: $birthCity\n            birthDistrict: $birthDistrict\n            birthdate: $birthdate\n            degree: $degree\n            email: $email\n            familyName: $familyName\n            id: $id\n            joinBefore: $joinBefore\n            joinDate: $joinDate\n            joinSchoolyear: $joinSchoolyear\n            name: $name\n            phone: $phone\n            phone2: $phone2\n            registerNo: $registerNo\n            sex: $sex\n            studentCode: $studentCode\n            username: $username\n        ) {\n            student {\n                id\n            }\n        }    \n    }\n"]))),N=(0,p.Ps)(h||(h=(0,S.Z)(["\n    mutation updateEventType ($color: String, $id: ID, $name: String) {\n        updateEventType (color: $color, id: $id, name: $name) {\n            eventType {\n                name\n            }\n        }\n    }\n"]))),q=(0,p.Ps)(g||(g=(0,S.Z)(["\n    mutation updateEvent ($content: String, $description: String, $endAt: String, $eventType: Int, $id: ID, $startAt: String, $title: String) {\n        updateEvent (content: $content, description: $description, endAt: $endAt, eventType: $eventType, id: $id, startAt: $startAt, title: $title) {\n            event {\n                title\n            }\n        }\n    }\n"])))},54073:function(n,e,t){t.r(e),t.d(e,{default:function(){return O}});var r=t(72791),a=t(29439),s=t(87309),i=t(66106),o=t(30914),d=t(66871),l=t(83099),u=t(36755),c=t(30394),m=t(49389),$=t(59432),h=t(53834),g=t(11730),S=t(68470),p=t(2703),f=t(22949),y=t(73332),Z=t(50419),x=t(37083),j=t(11561),b=t(82630),I=t(41920),D=t(82259),v=t(7378),P=t(96578),C=t(86586),N=t(84376),q=t(68694),T=t(80184),E=f.Z.Option,A=m.Z.TextArea,M=function(n){var e=n.student,t=y.Z.useForm(),r=(0,a.Z)(t,1)[0],d=(0,P.a)(I.Fm),l=d.data,u=d.loading,c=(0,P.a)(I.YP),$=c.data,h=c.loading,g=(0,P.a)(I.YV),S=g.data,p=g.loading,M=(0,P.a)(v.Ds),B=M.data,k=M.loading,w=(0,P.a)(v.$5),F=w.data,Y=w.loading,L=(0,P.a)(v.w9),O=L.data,Q=L.loading,U=(0,C.t)(q.FQ),z=(0,a.Z)(U,2),V=z[0],X=z[1],G=X.data,K=X.loading,R=(0,C.t)(I.vh),W=(0,a.Z)(R,2),_=W[0],J=W[1],H=J.data,nn=J.sectionsLoading,en=(0,N.D)(D.Y5,{refetchQueries:[{query:I.tz},{query:I.Dp,variables:{student:e.id}}],onCompleted:function(n){Z.ZP.success("\u0410\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0445\u0430\u0434\u0433\u0430\u043b\u043b\u0430\u0430"),r.resetFields()}}),tn=(0,a.Z)(en,2),rn=tn[0],an=tn[1].loading;return(0,T.jsx)(x.Z,{spinning:u||h||p||K||nn||k||Q||Y||an,tip:"\u0410\u0447\u0430\u0430\u043b\u043b\u0430\u0436 \u0431\u0430\u0439\u043d\u0430...",children:(0,T.jsxs)(y.Z,{id:"TransferForm",layout:"vertical",form:r,name:"transfer",onFinish:function(n){n.student=e.id,rn({variables:n})},children:[(0,T.jsx)(i.Z,{gutter:24,children:(0,T.jsxs)(o.Z,{span:24,children:[(0,T.jsx)(y.Z.Item,{name:"school",label:(0,T.jsx)(b.Z,{id:"school"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===l||void 0===l?void 0:l.allSchools.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.name},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"program",label:(0,T.jsx)(b.Z,{id:"program"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{onChange:function(n){return V({variables:{program:n,offset:0,limit:0,filter:""}})},children:null===$||void 0===$?void 0:$.allPrograms.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.program},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"classes",label:(0,T.jsx)(b.Z,{id:"classes"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsxs)(f.Z,{onChange:function(n){return _({variables:{classes:n}})},children:[null===G||void 0===G?void 0:G.allClassess.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.classes},e)})),(0,T.jsx)(E,{children:"aa"})]})}),(0,T.jsx)(y.Z.Item,{name:"section",label:(0,T.jsx)(b.Z,{id:"section"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===H||void 0===H?void 0:H.sectionsByClasses.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.section},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"classtime",label:(0,T.jsx)(b.Z,{id:"classtime"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===S||void 0===S?void 0:S.allClasstimes.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.name},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"activity",label:(0,T.jsx)(b.Z,{id:"activity"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===F||void 0===F?void 0:F.allActivitys.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.name},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"docNum",label:(0,T.jsx)(b.Z,{id:"docNum"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(m.Z,{})}),(0,T.jsx)(y.Z.Item,{name:"docDate",label:(0,T.jsx)(b.Z,{id:"docDate"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(j.Z,{style:{width:"100%"}})}),(0,T.jsx)(y.Z.Item,{name:"description",label:(0,T.jsx)(b.Z,{id:"description"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(A,{rows:4})}),(0,T.jsx)(y.Z.Item,{name:"status",label:(0,T.jsx)(b.Z,{id:"status"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===B||void 0===B?void 0:B.allStudentStatuss.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.name},e)}))})}),(0,T.jsx)(y.Z.Item,{name:"statusExtra",label:(0,T.jsx)(b.Z,{id:"student-status-extra"}),rules:[{required:!0,message:(0,T.jsx)(b.Z,{id:"form.required"})}],children:(0,T.jsx)(f.Z,{children:null===O||void 0===O?void 0:O.allStudentStatusExtras.map((function(n,e){return(0,T.jsx)(E,{value:n.id,children:n.name},e)}))})})]})}),(0,T.jsx)(i.Z,{children:(0,T.jsx)(o.Z,{span:24,style:{textAlign:"right"},children:(0,T.jsx)(s.Z,{type:"primary",htmlType:"submit",children:(0,T.jsx)(b.Z,{id:"main.okText"})})})})]})})},B=t(59305),k=t(64880),w=t(72426),F=t.n(w);var Y=function(n){var e=n.data,t=n.student,f=(0,r.useState)(e),y=(0,a.Z)(f,2),Z=y[0],x=y[1],j=(0,k.k6)(),I=[{key:"school",title:(0,T.jsx)(b.Z,{id:"school"}),dataIndex:["school","name"],sorter:function(n,e){return p.ZP.antdTableSorter(n,e,"school")}},{key:"program",title:(0,T.jsx)(b.Z,{id:"program"}),dataIndex:["program","program"],sorter:function(n,e){return p.ZP.antdTableSorter(n,e,"program")}},{key:"description",title:(0,T.jsx)(b.Z,{id:"description"}),dataIndex:"description",sorter:function(n,e){return p.ZP.antdTableSorter(n,e,"description")}},{key:"docDate",title:(0,T.jsx)(b.Z,{id:"docDate"}),dataIndex:"docDate",sorter:function(n,e){return p.ZP.antdTableSorter(n,e,"docDate")},render:function(n){return(0,T.jsx)("span",{children:F()(n).format("YYYY-MM-DD")})}},{key:"status",title:(0,T.jsx)(b.Z,{id:"status"}),dataIndex:["status","name"],sorter:function(n,e){return p.ZP.antdTableSorter(n,e,"status")}}];return(0,T.jsxs)(T.Fragment,{children:[(0,T.jsx)(S.Z,{alignItems:"center",justifyContent:"between",mobileFlex:!1,children:(0,T.jsx)(S.Z,{mobileFlex:!1,children:(0,T.jsx)("div",{className:"text-right",children:(0,T.jsxs)(s.Z,{onClick:function(){return j.goBack()},type:"default",icon:(0,T.jsx)(h.Z,{}),block:!0,children:[" ",(0,T.jsx)(b.Z,{id:"back"})]})})})}),(0,T.jsxs)(i.Z,{gutter:[16,16],className:"mt-4",children:[(0,T.jsx)(o.Z,{xs:24,sm:24,md:24,lg:12,xl:12,children:(0,T.jsx)(d.Z,{title:(0,T.jsx)(b.Z,{id:"transfer-student"}),children:(0,T.jsx)(M,{student:t})})}),(0,T.jsxs)(o.Z,{xs:24,sm:24,md:24,lg:12,xl:12,children:[(0,T.jsx)(d.Z,{title:(0,T.jsx)(b.Z,{id:"student-information"}),children:(0,T.jsxs)(i.Z,{children:[(0,T.jsx)(o.Z,{xs:24,sm:6,md:6,lg:6,xl:6,children:(0,T.jsx)(l.Z,{direction:"horizontal",style:{width:"100%",justifyContent:"center"},children:(0,T.jsx)(u.Z,{preview:!1,alt:t.photo,src:B._O+t.photo})})}),(0,T.jsx)(o.Z,{xs:24,sm:18,md:18,lg:18,xl:18,children:(0,T.jsxs)(c.Z,{layout:"vertical",bordered:!0,children:[(0,T.jsx)(c.Z.Item,{label:(0,T.jsx)(b.Z,{id:"familyName"}),children:t.familyName}),(0,T.jsx)(c.Z.Item,{label:(0,T.jsx)(b.Z,{id:"name"}),children:t.name}),(0,T.jsx)(c.Z.Item,{label:(0,T.jsx)(b.Z,{id:"studentCode"}),children:t.studentCode})]})})]})}),(0,T.jsxs)(d.Z,{title:(0,T.jsx)(b.Z,{id:"transfer-history"}),children:[(0,T.jsx)(S.Z,{alignItems:"center",justifyContent:"between",mobileFlex:!1,children:(0,T.jsx)(S.Z,{className:"mb-1",mobileFlex:!1,children:(0,T.jsx)("div",{className:"mr-md-3 mb-3",children:(0,T.jsx)(m.Z,{placeholder:"\u0425\u0430\u0439\u0445",prefix:(0,T.jsx)(g.Z,{}),onChange:function(n){return function(n){var t=n.currentTarget.value,r=n.currentTarget.value?Z:e,a=p.ZP.wildCardSearch(r,t);x(a)}(n)}})})})}),(0,T.jsx)("div",{className:"table-responsive",children:(0,T.jsx)($.Z,{columns:I,pagination:!1,size:"small",dataSource:Z,rowKey:"id",bordered:!0})})]})]})]})]})},L=t(38937),O=function(n){var e,t=(0,P.a)(I.Dp,{variables:{student:null===(e=n.location.state)||void 0===e?void 0:e.student.id}}),r=t.data,a=t.error,s=t.loading;return a?null:s?(0,T.jsx)(L.Z,{cover:"content"}):(0,T.jsx)(Y,{title:n.title,student:n.location.state.student,data:r.transfersByStudent})}}}]);
//# sourceMappingURL=4073.1b1b56de.chunk.js.map