{"version":3,"file":"static/js/2946.a5bb2369.chunk.js","mappings":"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","sources":["components/shared-components/FormModal/index.js","graphql/plan.js","../node_modules/@heroicons/react/outline/esm/PlusCircleIcon.js","views/app-views/plan/plan-action-form.js","views/app-views/plan/show.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteTwoTone.js","../node_modules/@ant-design/icons/es/icons/DeleteTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/RollbackOutlined.js","../node_modules/@ant-design/icons/es/icons/RollbackOutlined.js","../node_modules/antd/es/_util/styleChecker.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react'\r\nimport { Modal } from 'antd';\r\n\r\nconst FormModal = forwardRef(({ children, title, footer, okText = \"Хадгалах\", formName = \"form\" }, ref) => {\r\n    \r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        handleOpen() {\r\n            setIsModalVisible(true);\r\n        },\r\n        handleCancel () {\r\n            setIsModalVisible(false);\r\n        }\r\n    }));\r\n    \r\n    return (\r\n        <Modal \r\n            width={1500}\r\n            title={title} \r\n            visible={isModalVisible}\r\n            onCancel={ref.current?.handleCancel}\r\n            okText={okText}\r\n            footer={footer}\r\n            cancelText=\"Болих\"\r\n            okButtonProps={{form:formName, key: 'submit', htmlType: 'submit'}}\r\n        >\r\n            {children}\r\n        </Modal>\r\n    )\r\n});\r\n\r\nexport default FormModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ALL_PLAN_MARKS = gql`\r\n    query allPlanMarks {\r\n        allPlanMarks {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_PLAN_MARK = gql`\r\n    mutation createPlanMark ($name: String) {\r\n        createPlanMark (name: $name) {\r\n            planMark {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_PLAN_MARK = gql`\r\n    mutation updatePlanMark ($id: ID, $name: String) {\r\n        updatePlanMark (id: $id, name :$name) {\r\n            planMark {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_PLAN_MARK = gql`\r\n    mutation deletePlanMark ($id: ID) {\r\n        deletePlanMark (id: $id) {\r\n            planMark {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_PLANS = gql`\r\n    query allPlans {\r\n        allPlans {\r\n            id\r\n            title\r\n            teacher {\r\n                name\r\n                familyName\r\n            }\r\n            subject {\r\n                id\r\n                subject\r\n            }\r\n            section {\r\n                id\r\n                program {\r\n                    id\r\n                }\r\n            }\r\n            schoolyear {\r\n                id\r\n            }\r\n            approvedBy {\r\n                name\r\n                familyName\r\n            }\r\n            topic\r\n            subjectTopic\r\n            intention\r\n            keyword\r\n            consumables\r\n            duration\r\n        }\r\n    }\r\n`\r\n\r\nexport const PLAN_BY_ID = gql`\r\n    query planById($id: ID!) {\r\n        planById(id: $id) {\r\n            id\r\n            title\r\n            teacher {\r\n                name\r\n                familyName\r\n            }\r\n            subject {\r\n                subject\r\n            }\r\n            section {\r\n                classes {\r\n                    classes\r\n                }\r\n                section\r\n            }\r\n            schoolyear {\r\n                schoolyear\r\n            }\r\n            approvedBy {\r\n                name\r\n                familyName\r\n            }\r\n            topic\r\n            subjectTopic\r\n            intention\r\n            keyword\r\n            consumables\r\n            duration\r\n        }\r\n    }\r\n`\r\n\r\nexport const ALL_PLAN_ACTIONS_BY_PLAN = gql`\r\n    query allPlanActionsByPlan($plan: ID!) {\r\n        allPlanActionsByPlan(plan: $plan) {\r\n            id\r\n            planMark\r\n            name\r\n            teachingMethod\r\n            teacherActivity\r\n            studentActivity\r\n            studentAssignment\r\n            duration\r\n        }\r\n    }\r\n` \r\n\r\nexport const CREATE_PLAN = gql`\r\n    mutation createPlan(\r\n        $consumables: String\r\n        $duration: Int\r\n        $intention: String\r\n        $keyword: String\r\n        $schoolyear: ID\r\n        $section: ID\r\n        $subject: ID\r\n        $subjectTopic: String\r\n        $title: String\r\n        $topic: String\r\n    ) {\r\n        createPlan (\r\n            consumables : $consumables\r\n            duration : $duration\r\n            intention : $intention\r\n            keyword : $keyword\r\n            schoolyear : $schoolyear\r\n            section : $section\r\n            subject : $subject\r\n            subjectTopic : $subjectTopic\r\n            title: $title\r\n            topic : $topic\r\n        ) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_PLAN = gql`\r\n    mutation updatePlan(\r\n        $consumables: String\r\n        $duration: Int\r\n        $id: ID\r\n        $intention: String\r\n        $keyword: String\r\n        $schoolyear: ID\r\n        $section: ID\r\n        $subject: ID\r\n        $subjectTopic: String\r\n        $title: String\r\n        $topic: String\r\n    ) {\r\n        updatePlan(\r\n            consumables: $consumables\r\n            duration: $duration\r\n            id: $id\r\n            intention: $intention\r\n            keyword: $keyword\r\n            schoolyear: $schoolyear\r\n            section: $section\r\n            subject: $subject\r\n            subjectTopic: $subjectTopic\r\n            title: $title\r\n            topic: $topic\r\n        ) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const APPROVE_PLAN = gql`\r\n    mutation approvePlan ($plan: ID) {\r\n        approvePlan (plan: $plan) {\r\n            plan {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_PLAN = gql`\r\n    mutation deletePlan($id: ID) {\r\n        deletePlan(id: $id){\r\n            plan {\r\n                topic\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_PLAN_ACTION = gql`\r\n    mutation createPlanAction(\r\n        $duration: Int\r\n        $name: String\r\n        $plan: ID\r\n        $planMark: String\r\n        $studentActivity: String\r\n        $studentAssignment: String\r\n        $teacherActivity: String\r\n        $teachingMethod: String\r\n    ) {\r\n        createPlanAction (\r\n            duration: $duration\r\n            name: $name\r\n            plan: $plan\r\n            planMark: $planMark\r\n            studentActivity: $studentActivity\r\n            studentAssignment: $studentAssignment\r\n            teacherActivity: $teacherActivity\r\n            teachingMethod: $teachingMethod\r\n        ) {\r\n            planAction {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_PLAN_ACTION = gql`\r\n    mutation updatePlanAction(\r\n        $duration: Int\r\n        $id: ID\r\n        $name: String\r\n        $plan: ID\r\n        $planMark: String\r\n        $studentActivity: String\r\n        $studentAssignment: String\r\n        $teacherActivity: String\r\n        $teachingMethod: String\r\n    ) {\r\n        updatePlanAction (\r\n            duration: $duration\r\n            id: $id\r\n            name: $name\r\n            plan: $plan\r\n            planMark: $planMark\r\n            studentActivity: $studentActivity\r\n            studentAssignment: $studentAssignment\r\n            teacherActivity: $teacherActivity\r\n            teachingMethod: $teachingMethod\r\n        ) {\r\n            planAction {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_PLAN_ACTION = gql`\r\n    mutation deletePlanAction($id: ID) {\r\n        deletePlanAction(id: $id) {\r\n            planAction {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`","import * as React from \"react\";\n\nfunction PlusCircleIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PlusCircleIcon);\nexport default ForwardRef;","import React, { useEffect } from 'react';\r\nimport { Form, Input, InputNumber, message, Select, Spin } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ALL_PLAN_ACTIONS_BY_PLAN, CREATE_PLAN_ACTION, UPDATE_PLAN_ACTION } from 'graphql/plan';\r\nimport BraftEditor from 'braft-editor';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst { Option } = Select\r\n\r\nfunction PlanActionForm ({ closeModal, selectedData }) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { id } = useParams()\r\n\r\n    const [create, { loading: createLoading }] = useMutation(CREATE_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_PLAN_ACTIONS_BY_PLAN,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    const [update, { loading: updateLoading }] = useMutation(UPDATE_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_PLAN_ACTIONS_BY_PLAN,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            closeModal();\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedData.id) {\r\n            const formData ={\r\n                planMark: selectedData.planMark,\r\n                name: selectedData.name,\r\n                teachingMethod: selectedData.teachingMethod,\r\n                teacherActivity: BraftEditor.createEditorState(selectedData.teacherActivity),\r\n                studentActivity: BraftEditor.createEditorState(selectedData.studentActivity),\r\n                studentAssignment: BraftEditor.createEditorState(selectedData.studentAssignment),\r\n                duration: selectedData.duration\r\n\t\t\t}\r\n            form.setFieldsValue(formData);\r\n        } else {\r\n            form.resetFields()\r\n        }\r\n    }, [selectedData])\r\n    \r\n\r\n    const onFinish = values => {\r\n        values.plan = id\r\n        values.teacherActivity = values.teacherActivity.toHTML();\r\n        values.studentAssignment = values.studentAssignment.toHTML();\r\n        values.studentActivity = values.studentActivity.toHTML();\r\n        if (selectedData.id) {\r\n            values.id = selectedData.id\r\n            update({ variables: values })\r\n        } else {\r\n            create({ variables: values })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Spin spinning={createLoading || updateLoading} tip=\"Ачааллаж байна...\">\r\n            <Form  \r\n                id=\"form\"\r\n                layout={'vertical'}\r\n                form={form}\r\n                name=\"form\" \r\n                onFinish={onFinish}\r\n            >\r\n                <div className='grid grid-cols-2 gap-4'>\r\n                    <Form.Item name=\"name\" label={<IntlMessage id=\"name\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        },\r\n                        {\r\n                            max: 50,\r\n                            message: <IntlMessage id=\"form.max\" />\r\n                        }\r\n                    ]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"teachingMethod\" label={<IntlMessage id=\"teachingMethod\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        },\r\n                        {\r\n                            max: 100,\r\n                            message: <IntlMessage id=\"form.max\" />\r\n                        }\r\n                    ]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"planMark\" label={<IntlMessage id=\"planMark\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        }\r\n                    ]}>\r\n                        <Input.TextArea \r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"duration\" label={<IntlMessage id=\"duration\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        }\r\n                    ]}>\r\n                        <InputNumber className='w-100' />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"studentActivity\" label={<IntlMessage id=\"studentActivity\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        },\r\n                    ]}>\r\n                        <BraftEditor\r\n                            className='border rounded-2'\r\n                            language=\"en\"\r\n                            // onChange={handleChange}\r\n                            // value={editorState}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"teacherActivity\" label={<IntlMessage id=\"teacherActivity\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        },\r\n                    ]}>\r\n                        <BraftEditor\r\n                            className='border rounded-2'\r\n                            language=\"en\"\r\n                            // onChange={handleChange}\r\n                            // value={editorState}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"studentAssignment\" label={<IntlMessage id=\"studentAssignment\" />} rules={[\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessage id=\"form.required\" />\r\n                        },\r\n                    ]}>\r\n                        <BraftEditor\r\n                            className='border rounded-2'\r\n                            language=\"en\"\r\n                            // onChange={handleChange}\r\n                            // value={editorState}\r\n                        />\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default PlanActionForm","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { PlusCircleIcon } from '@heroicons/react/outline'\r\nimport { Button, message, Modal } from 'antd'\r\nimport { PrinterOutlined, RollbackOutlined , DeleteTwoTone, CheckOutlined } from '@ant-design/icons';\r\nimport FormModal from 'components/shared-components/FormModal'\r\nimport Loading from 'components/shared-components/Loading'\r\nimport IntlMessage from 'components/util-components/IntlMessage'\r\nimport { ALL_PLAN_ACTIONS_BY_PLAN, APPROVE_PLAN, DELETE_PLAN_ACTION, PLAN_BY_ID } from 'graphql/plan'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport PlanActionForm from './plan-action-form'\r\nimport { CheckPer } from 'hooks/checkPermission';\r\n\r\nconst { confirm } = Modal\r\n\r\nconst PrintCard = forwardRef (({ data, actions, handleOpen, onActionRowClick, permissions }, ref) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [points, setPoints] = useState({ x: 0, y: 0 });\r\n\r\n    const contextMenuRef = useRef(null)\r\n\r\n    const { id } = useParams()\r\n\r\n    const [deletePlanAction] = useMutation(DELETE_PLAN_ACTION, {\r\n        refetchQueries: [{\r\n            query: ALL_PLAN_ACTIONS_BY_PLAN,\r\n            variables: { plan: id }\r\n        }],\r\n        onCompleted: data => {\r\n            message.success(\"Амжилттай хадгаллаа\")\r\n        }\r\n    })\r\n\r\n    function onDelete(id) {\r\n        confirm({\r\n            title: 'Устгах уу?',\r\n            okText: 'Устгах',\r\n            okType: 'danger',\r\n            cancelText: 'Болих',\r\n            onOk() {\r\n\t\t\t\tdeletePlanAction({ variables: { id: id } })\r\n            },\r\n\t\t});\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        function onClickOutside() {\r\n            setShow(false)\r\n        }\r\n\r\n\t\tconst handleClickOutside = (event) => {\r\n\t\t\tif (contextMenuRef.current && !contextMenuRef.current.contains(event.target)) {\r\n\t\t\t\tonClickOutside && onClickOutside();\r\n\t\t\t}\r\n\t\t};\r\n\t\tdocument.addEventListener('contextmenu', handleClickOutside, true);\r\n\t\tdocument.addEventListener('click', handleClickOutside, true);\r\n\t\treturn () => {\r\n\t\t  \tdocument.removeEventListener('contextmenu', handleClickOutside, true);\r\n\t\t\t  document.addEventListener('click', handleClickOutside, true);\r\n\t\t};\r\n\t}, []);\r\n\r\n    return (\r\n        <div className='bg-white rounded-4 p-2' ref={ref} >\r\n            <div className='flex flex-row justify-end'>\r\n                <h4 className='text-emind font-bold mr-40'>Баталсан: </h4>\r\n                <h4 className=' text-emind font-bold'>{data.planById.approvedBy?.familyName} {data.planById.approvedBy?.name}</h4>\r\n            </div>\r\n            <div>\r\n                <h4 className='text-center text-emind font-bold'>{data.planById.title}</h4>\r\n            </div>\r\n            <div className='grid grid-cols-3 gap-4' >\r\n                <div className='col-span-3' >\r\n                    <p className='font-bold text-emind'>ХИЧЭЭЛИЙН НЭР:  {data.planById.subject.subject} </p>\r\n                </div>\r\n                <div>\r\n                    <p className='font-bold text-emind'>АНГИ : {data.planById.section.classes.classes} {data.planById.section.section}</p>\r\n                </div>\r\n                <div className='text-end'>\r\n                    <p className='font-bold text-emind'>{data.planById.duration}мин</p>\r\n                </div>\r\n                <div className='text-end'>\r\n                    <p className='font-bold text-emind'>{data.planById.schoolyear.schoolyear}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"sm:-mx-6 lg:-mx-8\">\r\n                    <div className=\"py-2 inline-block min-w-full print:block sm:px-6 lg:px-8\">\r\n                        <div className=\"\">\r\n                            <table \r\n                                className=\"min-w-full table-fixed border text-center print:break-before-all\"\r\n                                >\r\n                                <tbody>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\" colSpan={2}>\r\n                                            Бүлэг сэдэв\r\n                                        </td>\r\n                                        <td className=\"text-sm text-left text-gray-900 font-light px-6 py-4  border-r\" colSpan={5}>\r\n                                            {data.planById.topic}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\" colSpan={2}>\r\n                                        Ээлжит хичээлийн сэдэв\r\n                                        </td>\r\n                                        <td className=\"text-sm text-left text-gray-900 font-light px-6 py-4  border-r\" colSpan={5}>\r\n                                            {data.planById.subjectTopic}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\" colSpan={2}>\r\n                                        Суралцахуйн зорилт\r\n                                        </td>\r\n                                        <td className=\"text-sm text-left text-gray-900 font-light px-6 py-4  border-r\" colSpan={5}>\r\n                                            {data.planById.intention}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\" colSpan={2}>\r\n                                        Түлхүүр үг\r\n                                        </td>\r\n                                        <td className=\"text-sm text-left text-gray-900 font-light px-6 py-4  border-r\" colSpan={5}>\r\n                                            {data.planById.keyword}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\" colSpan={2}>\r\n                                        Хэрэглэгдэхүүн\r\n                                        </td>\r\n                                        <td className=\"text-sm text-left text-gray-900 font-light px-6 py-4  border-r\" colSpan={5}>\r\n                                            {data.planById.consumables}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr className=\"border-b\">\r\n                                        <td className=\"px-6 py-4  text-sm font-bold text-gray-900 border-r\">Үе шат</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4  border-r\">Сургалтын арга</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4  border-r\">Багшийн үйл ажиллагаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4  border-r\">Суралцагчийн үйл ажиллагаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4  border-r\">Хугацаа</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4  border-r\">Суралцагчийн бие даан гүйцэтгэх ажлууд, гэрийн даалгавар</td>\r\n                                        <td className=\"text-sm text-gray-900 font-bold px-6 py-4 \">Үнэлгээний хэлбэр</td>\r\n                                    </tr>\r\n                                    { actions?.allPlanActionsByPlan.map((item, index) => (\r\n                                        <Fragment key={index}>\r\n                                            <tr\r\n                                                key={index}\r\n                                                className=\"border-b hover:cursor-pointer break-after-auto break-inside-avoid\" \r\n                                                onContextMenuCapture={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    if (permissions.delete ) {\r\n                                                        setShow(true);\r\n                                                        setPoints({ x: e.pageX, y: e.pageY });\r\n                                                    }\r\n                                                }}\r\n                                                onClick={() => onActionRowClick(item)}\r\n                                            >\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\">{item.name}</td>\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\">{item.teachingMethod}</td>\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\" dangerouslySetInnerHTML={{__html: item.teacherActivity}} />\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\" dangerouslySetInnerHTML={{__html: item.studentActivity}} />\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\">{item.duration} мин</td>\r\n                                                <td className=\"text-sm text-gray-900 border-r print:break-before-auto\" dangerouslySetInnerHTML={{__html: item.studentAssignment}} />\r\n                                                <td className=\"text-sm text-gray-900 \">{item.planMark}</td>\r\n                                            </tr>\r\n                                            { show && \r\n                                                    <div ref={contextMenuRef} className=\"absolute z-10\" style={{\r\n                                                        top: points.y,\r\n                                                        left: points.x\r\n                                                    }}> \r\n                                                        <div className=\"bg-white w-60 border border-gray-300 rounded-lg flex flex-col text-sm py-4 px-2 text-gray-500\">\r\n                                                            <div className=\"flex py-1 px-2 rounded hover:bg-background hover:cursor-pointer\" onClick={() => onDelete(item.id)}>\r\n                                                                <div className=\"w-8\">\r\n                                                                    <DeleteTwoTone twoToneColor=\"#eb2f96\" key=\"delete\" />\r\n                                                                </div>\r\n                                                                <div>Устгах</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                        </Fragment>\r\n                                    ))}\r\n                                    { permissions.create &&\r\n                                        <tr className=\"bg-white border-b print:hidden\">\r\n                                            <td className=\"px-6 py-4  font-bold text-gray-900 border-r\" colSpan={7}>\r\n                                                <PlusCircleIcon className='h-6 m-auto hover:cursor-pointer' onClick={() => handleOpen()} />\r\n                                            </td>\r\n                                        </tr>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n                <p className='mr-40 text-black'>Төлөвлөгөө боловсруулсан багш:</p>\r\n                <p className='text-black'>{data.planById.teacher.familyName} {data.planById.teacher.name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nconst Show = () => {\r\n\r\n    const { id } = useParams()\r\n    const componentRef = useRef();\r\n    const [selectedData, setSelectedData] = useState({})\r\n\r\n    const { data, loading, error, refetch } = useQuery(PLAN_BY_ID, {\r\n        variables: { id: id }\r\n    })\r\n\r\n    const { data: actions } = useQuery(ALL_PLAN_ACTIONS_BY_PLAN, {\r\n        variables: { plan: id }\r\n    })\r\n\r\n    const [approvePlan] = useMutation(APPROVE_PLAN, {\r\n        onCompleted: data => {\r\n            refetch()\r\n        }\r\n    })\r\n    \r\n\r\n    const permissions = {\r\n        create: CheckPer('add_plan'), \r\n        edit: CheckPer('change_plan'),\r\n        delete: CheckPer('delete_plan'),\r\n        approve_plan: CheckPer('approve_plan')\r\n    }\r\n\r\n    const modalRef = useRef();\r\n    \r\n    function handleCancel() {\r\n        modalRef.current.handleCancel()\r\n    }\r\n\r\n    function handleOpen() {\r\n        if (permissions.create) {\r\n            setSelectedData({})\r\n            modalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    function onActionRowClick(params) {\r\n        if (permissions.edit) {\r\n            setSelectedData(params)\r\n            modalRef.current.handleOpen()\r\n        }\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    function handleApporve() {\r\n        approvePlan({ variables: { plan: id } });\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loading cover='content' />\r\n    }\r\n    \r\n    if (error) {\r\n        return (\r\n            <section className=\"bg-white \">\r\n                <div className=\"py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6\">\r\n                    <div className=\"mx-auto max-w-screen-sm text-center\">\r\n                        <h1 className=\"mb-4 text-7xl tracking-tight font-extrabold lg:text-9xl text-emind-600 \">404</h1>\r\n                        <p className=\"mb-4 text-3xl tracking-tight font-bold text-emind-600 md:text-4xl \">Хуудас олдсонгүй.</p>\r\n                        <p className=\"mb-4 text-lg font-light text-gray-500 \">Уучлаарай, бид энэ хуудсыг олж чадсангүй. </p>\r\n                        <Link to={'/app/plan'} className=\"inline-flex bg-emind text-white hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center my-4\">Буцах</Link>\r\n                    </div>   \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormModal ref={modalRef}>\r\n                <PlanActionForm selectedData={selectedData} closeModal={handleCancel} />\r\n            </FormModal>\r\n            <div className='flex justify-between mb-4'>\r\n                <div>\r\n                    <Link to={'/app/plan'}>\r\n                        <Button type=\"default\" icon={<RollbackOutlined />} > <IntlMessage id=\"back\" /> </Button>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    { !data.planById.approvedBy && permissions.approve_plan &&\r\n                        <Button className='mr-4 bg-green-400 border-green-200' onClick={handleApporve} type=\"primary\" icon={<CheckOutlined />} > Батлах </Button>\r\n                    }\r\n                    <Button onClick={handlePrint} type=\"primary\" icon={<PrinterOutlined />} > <IntlMessage id=\"print\" /> </Button>\r\n                </div>\r\n            </div>\r\n            <div ref={componentRef}>\r\n                <PrintCard data={data} permissions={permissions} actions={actions} handleOpen={handleOpen}  onActionRowClick={onActionRowClick} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Show","// This icon file is generated automatically.\nvar DeleteTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M292.7 840h438.6l24.2-512h-487z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-504-72h304v72H360v-72zm371.3 656H292.7l-24.2-512h487l-24.2 512z\", \"fill\": primaryColor } }] }; }, \"name\": \"delete\", \"theme\": \"twotone\" };\nexport default DeleteTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteTwoToneSvg from \"@ant-design/icons-svg/es/asn/DeleteTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteTwoTone = function DeleteTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteTwoToneSvg\n  }));\n};\nDeleteTwoTone.displayName = 'DeleteTwoTone';\nexport default /*#__PURE__*/React.forwardRef(DeleteTwoTone);","// This icon file is generated automatically.\nvar RollbackOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M793 242H366v-74c0-6.7-7.7-10.4-12.9-6.3l-142 112a8 8 0 000 12.6l142 112c5.2 4.1 12.9.4 12.9-6.3v-74h415v470H175c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h618c35.3 0 64-28.7 64-64V306c0-35.3-28.7-64-64-64z\" } }] }, \"name\": \"rollback\", \"theme\": \"outlined\" };\nexport default RollbackOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RollbackOutlinedSvg from \"@ant-design/icons-svg/es/asn/RollbackOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar RollbackOutlined = function RollbackOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RollbackOutlinedSvg\n  }));\n};\nRollbackOutlined.displayName = 'RollbackOutlined';\nexport default /*#__PURE__*/React.forwardRef(RollbackOutlined);","import canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport var isStyleSupport = function isStyleSupport(styleName) {\n  if (canUseDocElement()) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n\n  return false;\n};\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};"],"names":["FormModal","forwardRef","ref","children","title","footer","okText","formName","useState","isModalVisible","setIsModalVisible","useImperativeHandle","handleOpen","handleCancel","width","visible","onCancel","current","cancelText","okButtonProps","form","key","htmlType","ALL_PLAN_MARKS","gql","CREATE_PLAN_MARK","UPDATE_PLAN_MARK","DELETE_PLAN_MARK","ALL_PLANS","PLAN_BY_ID","ALL_PLAN_ACTIONS_BY_PLAN","CREATE_PLAN","UPDATE_PLAN","APPROVE_PLAN","DELETE_PLAN","CREATE_PLAN_ACTION","UPDATE_PLAN_ACTION","DELETE_PLAN_ACTION","React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","Select","closeModal","selectedData","Form","id","useParams","useMutation","refetchQueries","query","variables","plan","onCompleted","data","message","create","createLoading","loading","update","updateLoading","useEffect","formData","planMark","name","teachingMethod","teacherActivity","BraftEditor","studentActivity","studentAssignment","duration","setFieldsValue","resetFields","spinning","tip","layout","onFinish","values","toHTML","className","label","IntlMessage","rules","required","max","language","confirm","Modal","PrintCard","actions","onActionRowClick","permissions","show","setShow","x","y","points","setPoints","contextMenuRef","useRef","deletePlanAction","onClickOutside","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","planById","approvedBy","familyName","subject","section","classes","schoolyear","colSpan","topic","subjectTopic","intention","keyword","consumables","allPlanActionsByPlan","map","item","index","Fragment","onContextMenuCapture","e","preventDefault","delete","pageX","pageY","onClick","dangerouslySetInnerHTML","__html","style","top","left","okType","onOk","onDelete","DeleteTwoTone","twoToneColor","teacher","componentRef","setSelectedData","useQuery","error","refetch","approvePlan","CheckPer","edit","approve_plan","modalRef","handlePrint","useReactToPrint","content","Loading","cover","to","type","icon","RollbackOutlined","CheckOutlined","PrinterOutlined","params","primaryColor","secondaryColor","AntdIcon","_objectSpread","DeleteTwoToneSvg","displayName","RollbackOutlinedSvg","flexGapSupported","canUseDocElement","canUseDom","window","documentElement","isStyleSupport","styleName","styleNameList","Array","isArray","some","detectFlexGapSupported","undefined","flex","createElement","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild"],"sourceRoot":""}