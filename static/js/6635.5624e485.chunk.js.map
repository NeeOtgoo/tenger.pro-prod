{"version":3,"file":"static/js/6635.5624e485.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","graphql/lesson.js","views/app-views/online-lesson-sub/detail.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ALL_ONLINE_TYPE = gql `\r\n    query allOnlineTypes {\r\n        allOnlineTypes {\r\n            id\r\n            name\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const ALL_ONLINE_FILE = gql `\r\n    query allOnlineFiles ($folder: Int){\r\n        allOnlineFiles (folder: $folder){\r\n            id\r\n            file\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_FOLDERS = gql `\r\n    query allFolders ($folder: Int){\r\n        allFolders(folder: $folder){\r\n            id\r\n            name\r\n        }\r\n    }\r\n    `\r\n\r\nexport const CREATE_ONLINE_FILE = gql `\r\n    mutation createOnlineFile($file: Upload!, $folder: Int) {\r\n        createOnlineFile(file: $file, folder: $folder) {\r\n            onlineFile {\r\n                id\r\n                file\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_ONLINE_FILE_FOLDER = gql `\r\n    mutation createOnlineFileFolder($name: String, $subFolder: Int){\r\n        createOnlineFileFolder(name: $name, subFolder: $subFolder){\r\n            onlineFileFolder{\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_FILE = gql `\r\n    mutation deleteOnlineFile ($id: ID) {\r\n        deleteOnlineFile (id: $id) {\r\n            onlineFile {\r\n                file\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_FILE_FOLDER = gql`\r\n    mutation deleteOnlineFileFolder ($id: Int){\r\n        deleteOnlineFileFolder (id: $id){\r\n            onlineFileFolder {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ONLINE_LESSON = gql`\r\n    mutation createOnlineLesson ($content: String, $description: String, $schoolyear: Int, $status: String, $subject: Int) {\r\n        createOnlineLesson (content: $content, description: $description, schoolyear: $schoolyear, status: $status, subject: $subject) {\r\n            onlineLesson {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_ONLINE_LESSON = gql`\r\n    mutation updateOnlineLesson ($content: String, $description: String, $id: ID, $schoolyear: Int, $status: String, $subject: Int) {\r\n        updateOnlineLesson (content: $content, description: $description, id: $id, schoolyear: $schoolyear, status: $status, subject: $subject) {\r\n            onlineLesson {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_LESSON = gql`\r\n    query allOnlineLessons ($offset: Int!, $limit: Int!, $filter: String) {\r\n        count (appName: \"online_lesson\", modelName: \"Online_lesson\", filter: $filter) {\r\n            count\r\n        }\r\n        allOnlineLessons (offset: $offset, limit: $limit, filter: $filter) {\r\n            id\r\n            schoolyear {\r\n                id\r\n                schoolyear\r\n            }\r\n            subject {\r\n                id\r\n                subject\r\n            }\r\n            description\r\n            content\r\n            status\r\n            createUserid {\r\n                isTeacher\r\n                teacher {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LESSON_BY_ID = gql `\r\n    query onlineLessonById ($id: Int!) {\r\n        onlineLessonById (id: $id) {\r\n            id\r\n            schoolyear {\r\n                schoolyear\r\n                id\r\n            }\r\n            subject {\r\n                subject\r\n                id\r\n            }\r\n            description\r\n            content\r\n            status\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_LESSON = gql `\r\n    mutation deleteOnlineLesson ($id: ID) {\r\n        deleteOnlineLesson (id: $id) {\r\n            onlineLesson {\r\n                status\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_SUB_LESSON_BY_LESSON = gql `\r\n    query allOnlineSubByLesson ($onlineLesson: Int!) {\r\n        allOnlineSubByLesson (onlineLesson: $onlineLesson) {\r\n            id\r\n            title\r\n            description\r\n            content\r\n            createUserid {\r\n                isTeacher\r\n                teacher {\r\n                    name\r\n                }\r\n            }\r\n            onlineType {\r\n                id\r\n                name\r\n            }\r\n            onlineSubFileSet {\r\n                id\r\n                onlineFile {\r\n                    id\r\n                    file\r\n                }\r\n            }\r\n            status\r\n            createdAt\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_SUB_LESSON = gql`\r\n    mutation createOnlineSub ($content: String, $description: String, $onlineLesson: Int, $status: String, $title: String, $onlineType: Int) {\r\n        createOnlineSub (content: $content, description: $description, onlineLesson: $onlineLesson, status: $status, title: $title, onlineType: $onlineType) {\r\n            onlineSub {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_SUB_LESSON = gql `\r\n    mutation updateOnlineSub ($content: String, $description: String, $id: ID, $onlineLesson: Int, $status: String, $title: String, $onlineType: Int) {\r\n        updateOnlineSub (content: $content, description: $description, id: $id, onlineLesson: $onlineLesson, status: $status, title: $title, onlineType: $onlineType) {\r\n            onlineSub {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_SUB_LESSON = gql `\r\n    mutation deleteOnlineSub ($id: ID) {\r\n        deleteOnlineSub (id: $id) {\r\n            onlineSub {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SUB_BY_ID = gql `\r\n    query onlineSubById ($id: Int!) {\r\n        onlineSubById (id: $id) {\r\n            title\r\n            description\r\n            content\r\n            onlineLesson {\r\n                subject {\r\n                    subject\r\n                }\r\n            }\r\n            onlineSubFileSet {\r\n                id\r\n                onlineFile {\r\n                    id\r\n                    file\r\n                }\r\n            }\r\n            onlineType {\r\n                id\r\n                name\r\n            }\r\n            onlineAttendanceSet {\r\n                student {\r\n                    id\r\n                    studentCode\r\n                    name\r\n                    familyName\r\n                }\r\n            }\r\n            status\r\n            createdAt\r\n        }\r\n    } \r\n`;\r\n\r\nexport const CREATE_ONLINE_STUDENT = gql `\r\n    mutation createOnlineStudent ($onlineLesson: Int, $studentCode: String = \"\", $section: Int = 0) {\r\n        createOnlineStudent (onlineLesson: $onlineLesson, studentCode: $studentCode, section: $section) {\r\n            onlineStudent {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ONLINE_STUDENT = gql `\r\n    mutation deleteOnlineStudent ($id: ID) {\r\n        deleteOnlineStudent (id: $id) {\r\n            onlineStudent {\r\n                student {\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_STUDENT_BY_LESSON = gql `\r\n    query allOnlineStudentByLesson ($onlineLesson: Int!) {\r\n        allOnlineStudentByLesson (onlineLesson: $onlineLesson) {\r\n            id\r\n            student {\r\n                id\r\n                familyName\r\n                name\r\n                studentCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_ONLINE_SUB_FILES = gql`\r\n    query allOnlineSubFiles ($onlineSub: Int) {\r\n        allOnlineSubFiles (onlineSub: $onlineSub) {\r\n            id\r\n            onlineFile {\r\n                id\r\n                file\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ONLINE_SUB_FILE = gql`\r\n    mutation createOnlineSubFile ($onlineFile: Int, $onlineSub: Int) {\r\n        createOnlineSubFile (onlineFile: $onlineFile, onlineSub: $onlineSub) {\r\n            onlineSubFile {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_ONLINE_SUB_FILE = gql`\r\n    mutation deleteOnlineSubFile ($id: Int) {\r\n        deleteOnlineSubFile (id: $id) {\r\n            onlineSubFile {\r\n                onlineSub {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React, { useState } from 'react';\r\nimport { Card, Typography, Divider, Badge, Row, Col, Table, Button, Image, Modal } from 'antd';\r\nimport { CalendarTwoTone, RollbackOutlined } from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { SizeMe } from 'react-sizeme';\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport moment from 'moment';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { SUB_BY_ID } from 'graphql/lesson';\r\nimport { BASE_SERVER_URL } from \"configs/AppConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nconst { Title, Paragraph } = Typography;\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst attendance_colums = [\r\n    {\r\n        title: <IntlMessage id=\"studentCode\" />,\r\n        dataIndex: ['student', 'studentCode'],\r\n        key: 'studentCode',\r\n    },\r\n    {\r\n        title: <IntlMessage id=\"familyName\" />,\r\n        dataIndex: ['student', 'familyName'],\r\n        key: 'familyName',\r\n    },\r\n    {\r\n        title: <IntlMessage id=\"name\" />,\r\n        dataIndex: ['student', 'name'],\r\n        key: 'name',\r\n    },\r\n]\r\n\r\nconst checkFileType = (file) => {\r\n    const type = file.split('.').pop()\r\n    switch (type) {\r\n        case 'jpg':\r\n        case 'jpeg':\r\n        case 'webp':\r\n        case 'svg':\r\n        case 'png':\r\n            return `image`;\r\n        case 'mp3':\r\n        case 'm4a':\r\n        case 'flac':\r\n            return `audio`;\r\n        case 'mp4':\r\n            return `video`;\r\n        case `pdf`:\r\n            return `pdf`;\r\n        default:\r\n            return BASE_SERVER_URL + file;\r\n    }\r\n}\r\n\r\nconst Detail = (props) => {\r\n\r\n    const slug = useParams();\r\n    const history = useHistory();\r\n\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const { data, loading } = useQuery(SUB_BY_ID, {\r\n        variables: { id: slug.subLesson }\r\n    });\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const goToPrevPage = () => {\r\n        setPageNumber(pageNumber - 1)\r\n    }\r\n    const goToNextPage = () => {\r\n        setPageNumber(pageNumber + 1)\r\n    }\r\n\r\n    const FilePreview = ({ file }) => {\r\n\r\n        switch (checkFileType(file)) {\r\n            case `audio`:\r\n                return (\r\n                    <ReactPlayer\r\n                        className=\"react-player\"\r\n                        width=\"100%\"\r\n                        height=\"50px\"\r\n                        controls={true}\r\n                        url={BASE_SERVER_URL + file}\r\n                    />\r\n                )\r\n            case `video`:\r\n                return (\r\n                    <ReactPlayer\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        controls={true}\r\n                        url={BASE_SERVER_URL + file}\r\n                    />\r\n                )\r\n            case 'image':\r\n                return (\r\n                    <Card\r\n                        bodyStyle={{ padding: 0 }}\r\n                        cover={\r\n                            <div className=\"p-2\">\r\n                                <Image preview={false} className=\"img-fluid\" alt=\"Preview\" src={BASE_SERVER_URL + file} />\r\n                            </div>\r\n                        }\r\n                    >\r\n                        <div className=\"px-2 pb-2 d-flex align-items-center justify-content-between\">\r\n                            <div>\r\n                                <h5 className=\"mb-0\">{file}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                )\r\n            case `pdf`:\r\n                return (\r\n                    <div>\r\n                        <Modal\r\n                            forceRender\r\n                            width={'80vw'}\r\n                            visible={isModalVisible}\r\n                            onCancel={handleCancel}\r\n                            footer={[\r\n                                <Button key=\"back\" type='text' disabled={pageNumber === 1 && true} onClick={goToPrevPage}>\r\n                                    <IntlMessage id=\"main.previous\" />\r\n                                </Button>,\r\n                                <Button key=\"next\" type=\"primary\" disabled={pageNumber === numPages && true} onClick={goToNextPage}>\r\n                                    <IntlMessage id=\"main.next\" />\r\n                                </Button>,\r\n                            ]}\r\n                        >\r\n                            <SizeMe\r\n                                monitorHeight\r\n                                refreshRate={128}\r\n                                refreshMode={\"debounce\"}\r\n                                render={({ size }) => (\r\n                                    <Document\r\n                                        file={BASE_SERVER_URL + file}\r\n                                        onLoadSuccess={({ numPages }) => setNumPages(numPages)}\r\n                                        renderTextLayer={false}\r\n                                        loading={<Loading cover=\"content\" />}\r\n                                        renderMode=\"svg\"\r\n                                    >\r\n                                        <Page\r\n                                            className=\"test\"\r\n                                            width={size.width}\r\n                                            pageNumber={pageNumber}\r\n                                            renderTextLayer={false}\r\n                                            renderAnnotationLayer={false}\r\n                                        />\r\n                                    </Document>\r\n                                )}\r\n                            />\r\n                            <p>Нийт {numPages} хуудсаас {pageNumber}-г харуулж байна </p>\r\n                        </Modal>\r\n                        <Button type='primary' onClick={showModal} ><IntlMessage id=\"show-file\" /></Button>\r\n                    </div>\r\n                )\r\n            default:\r\n                return (\r\n                    <div>\r\n                        <Button type='primary' onClick={() => window.open(BASE_SERVER_URL + file, '_blank')} ><IntlMessage id=\"show-file\" /></Button>\r\n                    </div>\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loading cover=\"content\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n                <Flex mobileFlex={false}>\r\n                    <div className='text-right' >\r\n                        <Button onClick={() => history.goBack()} type=\"default\" icon={<RollbackOutlined />} block> <IntlMessage id=\"back\" /></Button>\r\n                    </div>\r\n                </Flex>\r\n            </Flex>\r\n            <Row gutter={props.viewAttendance === true ? [8, 16] : 24}>\r\n                <Col xs={24} xl={props.viewAttendance === true ? 18 : 24}>\r\n                    <Card className='mt-4' >\r\n                        <h3 className='text-4xl'>{data.onlineSubById.title}</h3>\r\n                        <Typography>\r\n                            <Row gutter={[8, 8]}>\r\n                                <Col span={12} >\r\n                                    <Title level={5} ><IntlMessage id=\"added-date\" /></Title>\r\n                                    <CalendarTwoTone /> {moment(data.onlineSubById.createdAt).format('MMMM DD')}\r\n                                </Col>\r\n                                <Col span={12} >\r\n                                    <Title level={5} ><IntlMessage id=\"onlineType\" /></Title>\r\n                                    <Badge color={'cyan'} />\r\n                                    <span>{data.onlineSubById.onlineType.name}</span>\r\n                                </Col>\r\n                            </Row>\r\n                            <Divider />\r\n                            <Paragraph className='mt-4' >{data.onlineSubById.description}</Paragraph>\r\n                            <Divider> <Title level={2}><IntlMessage id=\"content\" /></Title>  </Divider>\r\n                            <div dangerouslySetInnerHTML={{ __html: data.onlineSubById.content }} ></div>\r\n                            <Divider> <Title level={2}><IntlMessage id=\"file\" /></Title> </Divider>\r\n                            <Paragraph>\r\n                                {data.onlineSubById.onlineSubFileSet.map((item, index) => (\r\n                                    <FilePreview key={index} file={item.onlineFile.file} />\r\n                                ))}\r\n                            </Paragraph>\r\n                        </Typography>\r\n                    </Card>\r\n                </Col>\r\n                {props.viewAttendance === true &&\r\n                    <Col xs={24} xl={6}>\r\n                        <Card className='mt-4'>\r\n                            <Title className='text-center' level={2}><IntlMessage id=\"class-attendance\" /></Title>\r\n                            <Table\r\n                                rowKey='studentCode'\r\n                                pagination={false}\r\n                                columns={attendance_colums}\r\n                                dataSource={data.onlineSubById.onlineAttendanceSet}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Detail;"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","ALL_ONLINE_TYPE","gql","ALL_ONLINE_FILE","ALL_FOLDERS","CREATE_ONLINE_FILE","CREATE_ONLINE_FILE_FOLDER","DELETE_ONLINE_FILE","DELETE_ONLINE_FILE_FOLDER","CREATE_ONLINE_LESSON","UPDATE_ONLINE_LESSON","ALL_ONLINE_LESSON","LESSON_BY_ID","DELETE_ONLINE_LESSON","ALL_SUB_LESSON_BY_LESSON","CREATE_SUB_LESSON","UPDATE_SUB_LESSON","DELETE_SUB_LESSON","SUB_BY_ID","CREATE_ONLINE_STUDENT","DELETE_ONLINE_STUDENT","ALL_ONLINE_STUDENT_BY_LESSON","CREATE_ONLINE_SUB_FILE","DELETE_ONLINE_SUB_FILE","Title","Typography","Paragraph","pdfjs","attendance_colums","title","id","dataIndex","key","slug","useParams","history","useHistory","useState","pageNumber","setPageNumber","numPages","setNumPages","isModalVisible","setIsModalVisible","useQuery","variables","subLesson","data","loading","showModal","handleCancel","goToPrevPage","goToNextPage","FilePreview","file","split","pop","BASE_SERVER_URL","checkFileType","width","height","controls","url","bodyStyle","padding","cover","preview","alt","src","forceRender","visible","onCancel","footer","type","disabled","onClick","SizeMe","monitorHeight","refreshRate","refreshMode","render","size","onLoadSuccess","renderTextLayer","renderMode","renderAnnotationLayer","window","open","goBack","icon","block","gutter","viewAttendance","xs","xl","onlineSubById","span","level","moment","createdAt","format","color","onlineType","name","description","dangerouslySetInnerHTML","__html","content","onlineSubFileSet","map","item","index","onlineFile","rowKey","pagination","columns","dataSource","onlineAttendanceSet"],"sourceRoot":""}